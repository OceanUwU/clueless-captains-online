{"version":3,"sources":["theme/index.js","Dialog/index.js","Dialog/show.js","socket/Connect/ing.js","socket/Connect/Failed.js","Home/CodeInput.js","Home/NameInput.js","Lobby/ColorPicker.js","Home/showMatchOptions.js","Rules/sections/Cards.js","Rules/sections/Turn.js","Rules/sections/index.js","Rules/sections/Premise.js","Rules/sections/Roles.js","Rules/sections/Mode2.js","Rules/sections/SpecialCases.js","Rules/sections/Tiles.js","Rules/DialogCentre.js","Rules/RulesDialog.js","Rules/index.js","Home/index.js","Lobby/index.js","Lobby/ComeBackMenu.js","Match/formatText.js","Match/Controller.js","Match/showRoleInfo.js","Match/index.js","Results/index.js","Match/images.js","Match/shuffleString.js","Match/gameplay.js","socket/index.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","main","overrides","MuiButton","textPrimary","borderRadius","border","color","padding","boxShadow","textSecondary","Dialog","props","state","open","handleOpen","bind","handleClose","this","setState","classes","onClose","disablePortal","aria-labelledby","aria-describedby","disableBackdropClick","required","disableEscapeKeyDown","DialogTitle","id","title","DialogContent","dividers","DialogContentText","className","text","description","children","DialogActions","Button","onClick","buttonText","buttonAction","React","Component","withStyles","margin","showDialog","a","Promise","res","Object","assign","layer","element","document","getElementById","createElement","appendChild","ReactDOM","render","ThemeProvider","CssBaseline","ref","dialog","setTimeout","Connecting","CircularProgress","ConnectFailed","error","size","window","location","reload","CodeInput","code","changeInput","tryCode","event","target","value","replace","socket","emit","search","length","slice","history","pushState","htmlFor","FormControl","clsx","textField","variant","InputLabel","FilledInput","onChange","autoComplete","inputProps","textInput","maxLength","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","edge","spacing","marginBottom","joinLabel","display","marginTop","marginRight","width","textTransform","useStyles","makeStyles","input","label","textAlign","NameInput","useState","localStorage","name","setName","changeName","newName","first","Grid","container","justify","alignItems","item","TextField","activeElement","blur","InputLabelProps","ColorPicker","selected","setSelected","taken","setTaken","useEffect","matchInfo","showTaken","console","log","players","map","p","num","on","off","ButtonGroup","orientation","buttonGroups","i","push","buttons","k","style","backgroundColor","playerColours","height","includes","cccolor","String","allowedPlayers","formControl","select","smallSelect","tilesAvailable","cardsAvailable","options","defaultMatchOptions","MatchOptions","JSON","parse","tiles","cards","Array","isArray","NumberTweaker","bigChange","fn","disabled","min","max","sendUpdate","editable","started","public","publicity","setPublicity","setPlayers","startHP","setStartHP","changeStartHP","change","maxHP","changeMaxHP","setMaxHP","rockDamage","setRockDamage","iceDamage","setIceDamage","leaveDamage","setLeaveDamage","treasureHeal","setTreasureHeal","boardSize","setBoardSize","changeBoardSize","axis","resetTiles","startPos","Math","round","setStartPos","changeStartPos","startDir","setStartDir","revealTiles","setRevealTiles","setTiles","treasuresNeeded","setTreasuresNeeded","changeTreasuresNeeded","treasure","newTiles","values","reduce","b","fromEntries","entries","find","t","handSize","setHandSize","minPlayed","setMinPlayed","changeMinPlayed","maxPlayed","setMaxPlayed","changeMaxPlayed","topPlayed","setTopPlayed","evilsSeeCards","setEvilsSeeCards","setCards","resetCards","filter","card","newCards","votingAnonymity","setVotingAnonymity","mode","setMode","names","nameConvention","setNameConvention","updateOptions","addEventListener","removeEventListener","nrCards","presetLoader","stringify","Divider","FormLabel","Typography","component","Switch","checked","RadioGroup","Number","row","n","FormControlLabel","control","Radio","Select","displayEmpty","MenuItem","FormHelperText","top","fontSize","fill","0","1","2","3","4","5","6","7","8","9","10","Checkbox","labelPlacement","flexWrap","tile","src","changeTiles","smallSselect","changeCards","showMatchOptions","ingame","PresetLoader","enteredOptions","setEnteredOptions","copyHelp","copyTitle","setCopyTitle","defaultValue","helperText","atob","alert","Tooltip","copy","btoa","changeOptions","newOptions","dispatchEvent","Event","hostChanged","amNowHost","Turn","Cards","Premise","videoID","maxWidth","Link","href","rel","frameBorder","allow","allowFullScreen","Roles","Mode2","SpecialCases","Tiles","TabPanel","index","other","role","hidden","Box","root","flexGrow","paper","tabs","minWidth","borderRight","divider","tab","tabPanel","overflowY","DialogCentre","setValue","Tabs","newValue","Tab","sections","centre","RulesDialog","setOpen","exp","openRules","ShowRulesIcon","BookIcon","showRules","ShowRulesButton","logoImage","controls","Home","gutterBottom","alt","rules","floor","random","privacyIcon","table","head","tableCell","you","textDecoration","Lobby","tableBody","amHost","startsWith","host","content","TableRow","TableCell","starting","bot","Audio","startTimer","play","protocol","TableContainer","Paper","Table","TableHead","TableBody","ComeBackMenu","choices","choice","typeNames","types","keys","colourOverrides","formatText","playerNames","words","split","word","space","hashtag","toLowerCase","typeFound","colourOverride","publicDir","hasOwnProperty","test","enterTouchDelay","PopperProps","zIndex","borderTop","overflowX","whiteSpace","playingStatusContainer","playingStatus","paddingRight","paddingLeft","playingCards","justifyContent","chat","maxHeight","wordBreak","voteArea","borderBottom","cursor","Controller","chatRef","createRef","bottomRef","setDisplay","cardsSelected","setCardsSelected","setPlayingStatus","playedCard","setPlayedCard","cardsLeft","setCardsLeft","vote","setVote","chooseTitle","setChooseTitle","muted","setMuted","messages","setMessages","messageTyped","setMessageTyped","sendMessage","votes","setVotes","votesA","newPlayingStatus","newCardsLeft","newVote","chatStart","dead","newMuted","message","prevMessages","current","scrollIntoView","lastMessage","scrollHeight","clientHeight","clientTop","scrollTop","class","cardsSelectedAmount","sendBlocked","opacity","player","pl","s","msg","o","l","m","toUpperCase","borderLeft","disableElevation","RoleInfo","me","seamonsters","pirates","teammate","roles","showRoleInfo","controllerHeight","gameInfo","gameInfoTitle","gameInfoContent","boardContainer","lineHeight","board","objectFit","left","flexDirection","Match","myId","dir","setDir","ship","pos","setPos","newDir","newPos","wins","gamesContainer","marginLeft","gameImage","counterImage","otherPlayer","Results","win","results","cause","rjCode","finalBoard","shuffleString","images","img","Image","HP","canvas","ctx","topCanvas","topCtx","boxSize","borderSize","tilesChanging","movement","direction","textNotifs","animating","renderBottom","globalAlpha","clearRect","fillStyle","x","fillRect","y","beginPath","moveTo","lineTo","complete","drawImage","renderBoard","bypass","now","Date","cttd","doBottom","forEach","start","time","new","before","reverse","splice","from","to","diff","shipImg","textBaseline","font","ntd","notif","progress","sin","PI","fillText","at","requestAnimationFrame","changeTile","newNotif","changeHP","abs","innerHTML","socketIOClient","serverLocation","transports","connectedOnce","displayConnectionFail","disconnected","toString","disconnect","kicker","startingMatchInfo","sentId","getContext","gameplay","damage","healing","originalBoard","toDataURL"],"mappings":"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","file":"static/js/main.9bc8492c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n\n        background: {\n            default: '#feffc7',\n        },\n\n        primary: {\n            main: '#d49a3d',\n        },\n    },\n\n    overrides: {\n        MuiButton: {\n            textPrimary: {\n                background: 'linear-gradient(45deg, #6b65cd 0%, #00d4ff 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px #00d4ff4D',\n            },\n\n            textSecondary: {\n                background: 'linear-gradient(45deg, #00ffaf 0%, #3956c7 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px #00ffaf4D',\n            }\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = theme => ({\n    text: {\n        margin: 0,\n    },\n});\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleOpen() {\n        this.setState({open: true});\n    };\n\n    handleClose() {\n        this.setState({open: false});\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <MUIDialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    disablePortal\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={this.props.required}\n                    disableEscapeKeyDown={this.props.required}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText className={classes.text} id=\"alert-dialog-description\">\n                            {this.props.description}\n                        </DialogContentText>\n                        {this.props.children}\n                    </DialogContent>\n                    <DialogActions>\n                        {this.props.required ? null : (\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                Close\n                            </Button>\n                        )}\n                        {this.props.buttonText ? (\n                            <Button onClick={this.props.buttonAction} color=\"primary\">\n                                {this.props.buttonText}\n                            </Button>\n                        ) : null}\n                    </DialogActions>\n                </MUIDialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Dialog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dialog from './';\n\nasync function showDialog(props = {}, children = null) {\n    return new Promise(async res => {\n        props = Object.assign({\n            title: 'Dialog title',\n            required: false,\n        }, props);\n    \n        let dialog;\n        let id = `dialog${props.layer ? props.layer : 0}`;\n        let element = document.getElementById(id);\n        if (element == null) {\n            element = document.createElement('div');\n            element.id = id;\n            document.getElementById('dialog').appendChild(element);\n        }\n        ReactDOM.render((\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Dialog {...props} ref={element => dialog = element}>\n                    {children}\n                </Dialog>\n            </ThemeProvider>\n        ), element);\n        \n        if (!dialog) //if it didnt work,\n            setTimeout(async () => res(await showDialog(props, children)), 100); //try it again with a delay (yes i know i shouldnt but shut up it works)\n        else {\n            dialog.handleOpen();\n            res(dialog);\n        }\n    });\n}\n\nexport default showDialog;","import React from 'react';\nimport './centred.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Connecting() {\n    return (\n        <div className=\"centred\">\n            <CircularProgress />\n            <h3>Attempting to connect to the Clueless Captains server...</h3>\n        </div>\n    );\n}\n\nexport default Connecting;","import React from 'react';\nimport './centred.css';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nfunction ConnectFailed(props) {\n    return (\n        <div className=\"centred\">\n            <ClearIcon />\n            <h3>Failed to connect to the Clueless Captains server.</h3>\n            {props.error ? <p>Error: \"{props.error}\"</p> : null}\n            <h4>Are you offline? If not, the Clueless Captains server might be down.</h4>\n            <Button size=\"large\" color=\"primary\" onClick={() => window.location.reload(false)}>Retry</Button>\n        </div>\n    );\n}\n\nexport default ConnectFailed;","import React from 'react';\nimport socket from '../socket/';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    joinLabel: {\n        display: 'inline-block',\n        marginTop: 22,\n        marginRight: 4,\n    },\n    textField: {\n        width: '18ch',\n    },\n    textInput: {\n        textTransform: 'uppercase',\n    },\n});\n\nclass CodeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n        };\n        this.changeInput = this.changeInput.bind(this);\n        this.tryCode = this.tryCode.bind(this);\n    }\n\n    changeInput(event) {\n        let code = event.target.value; //get the code entered from the input element\n        code = code.replace(' ', ''); //remove spaces, if any\n        this.setState({code}); //store the code in the state, so that it can be shown on the input element and accessed when the join button is clicked\n    }\n\n    tryCode() {\n        socket.emit('joinMatch', this.state.code);\n    }\n\n    componentDidMount() {\n        /*if (window.location.search.startsWith('?$')) {\n            let p = window.location.search.slice('?$'.length);\n        } else */if (window.location.search.length > 1) {\n            this.setState({code: window.location.search.slice(1)}, () => this.tryCode());\n            window.history.pushState('', '', '/');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <label {...{}/*className={classes.joinLabel}*/} htmlFor=\"roomCodeInput\">Or, join by code:</label>\n                <br />\n\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"roomCodeInput\">Room code</InputLabel>\n                    <FilledInput\n                        id=\"roomCodeInput\"\n                        type=\"text\"\n                        value={this.state.code}\n                        onChange={this.changeInput}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.textInput,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') this.tryCode()},\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Join\"\n                                    onClick={this.tryCode}\n                                    edge=\"end\"\n                                >\n                                    <ArrowForwardIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CodeInput);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        width: 170,\n    },\n    label: {\n        textAlign: 'center',\n    },\n}));\n\nfunction NameInput() {\n    const classes = useStyles();\n    const [name, setName] = React.useState(localStorage.name ? localStorage.name : '');\n    const changeName = (newName, first = false) => {\n        if (!first)\n            setName(newName);\n        localStorage.name = newName;\n        socket.emit('changeName', newName);\n    }\n    changeName(name, true);\n\n    const handleChange = event => changeName(event.target.value)\n\n    return (\n        <div className={classes.margin}>\n            <Grid container justify=\"center\" spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"nameInput\"\n                        label=\"Your name\"\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.input,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') document.activeElement.blur()},\n                        }}\n                        InputLabelProps={{\n                            className: classes.label,\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NameInput","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport playerColours from '../Match/playerColours.json';\nimport socket from '../socket';\n\nfunction saveColor(num) {\n}\n\nfunction ColorPicker(props) {\n    const [selected, setSelected] = React.useState(props.selected);\n    const [taken, setTaken] = React.useState([]);\n\n    React.useEffect(() => {\n        socket.emit('changeColor', selected);\n    });\n\n    if (props.matchInfo != null) {\n        React.useEffect(() => {\n            let showTaken = matchInfo => {\n                console.log(':O');\n                setTaken(matchInfo.players.map(p => p.num));\n            };\n            socket.on('matchUpdate', showTaken);\n            showTaken(props.matchInfo);\n            return () => socket.off('matchUpdate', showTaken);\n        }, []);\n    }\n\n    return (\n        <ButtonGroup orientation=\"vertical\">\n            {(() => {\n                let buttonGroups = [];\n                for (let i = 0; i < 16; i+=4) {\n                    buttonGroups.push(<ButtonGroup>{(() => {\n                        let buttons = [];\n                        for (let k = i; k < i+4; k++) {\n                            buttons.push(\n                                <Button\n                                    style={{color: 'white', backgroundColor: playerColours[k], height:'2.5em', width: 0}}\n                                    onClick={() => {\n                                        if (!taken.includes(k)) {\n                                            localStorage.cccolor = String(k);\n                                            setSelected(k);\n                                        }\n                                    }}\n                                >{selected == k ? '✓' : (taken.includes(k) ? '✕' : ' ')}</Button>\n                            );\n                        }\n                        return buttons;\n                    })()}</ButtonGroup>);\n                }\n                return buttonGroups;\n            })()}\n        </ButtonGroup>\n    );\n}\n\nexport default ColorPicker;","import React from 'react';\nimport { Typography, Divider, FormControl, Select, MenuItem, InputLabel, FormLabel, Slider, Tooltip, IconButton, TextField, Grid, Switch, Button, ButtonGroup, FormControlLabel, Checkbox, RadioGroup, Radio, FormHelperText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LinkIcon from '@material-ui/icons/Link';\nimport showDialog from '../Dialog/show';\nimport socket from '../socket';\nimport defaultMatchOptions from './defaultMatchOptions.json';\nimport copy from 'clipboard-copy';\nimport { TextFieldsOutlined } from '@material-ui/icons';\nconst allowedPlayers = [1, 8];\nconst maxGamesAllowed = [1, 4];\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    select: {\n        width: 200,\n    },\n    smallSelect: {\n        width: 50,\n    },\n}));\n\nconst tilesAvailable = [ //[name:string, at least 1 required:boolean]\n    ['treasure', true],\n    ['rock', false],\n    ['iceberg', false],\n    ['waves', false],\n    ['storm', false],\n    ['alcohol', false],\n    ['whirlpoolleft', false],\n    ['whirlpoolright', false],\n];\nconst cardsAvailable = [ //[name:string, non-removable:boolean]\n    ['n1', true],\n    ['n2', true],\n    ['n3', true],\n    ['n4', true],\n    ['ne1', true],\n    ['ne2', true],\n    ['ne3', true],\n    ['ne4', true],\n    ['e1', true],\n    ['e2', true],\n    ['e3', true],\n    ['e4', true],\n    ['se1', true],\n    ['se2', true],\n    ['se3', true],\n    ['se4', true],\n    ['s1', true],\n    ['s2', true],\n    ['s3', true],\n    ['s4', true],\n    ['sw1', true],\n    ['sw2', true],\n    ['sw3', true],\n    ['sw4', true],\n    ['w1', true],\n    ['w2', true],\n    ['w3', true],\n    ['w4', true],\n    ['nw1', true],\n    ['nw2', true],\n    ['nw3', true],\n    ['nw4', true],\n    ['forward1', true],\n    ['forward2', true],\n    ['forward3', true],\n    ['forward4', true],\n    ['turnl1', true],\n    ['turnl2', true],\n    ['turnl3', true],\n    ['turnr1', true],\n    ['turnr2', true],\n    ['turnr3', true],\n    ['turnr4', true],\n    ['seasickness', true],\n    ['persist', true],\n    ['relocate', true],\n    ['chaos', true],\n    ['bravery', true],\n    ['compass0', true],\n    ['compass1', true],\n    ['compass2', true],\n    ['compass3', true],\n    ['compass4', true],\n    ['compass5', true],\n    ['compass6', true],\n    ['compass7', true],\n    ['hammer', true],\n    ['nail', true],\n    ['hammernail', false],\n    ['lookout', true],\n    ['reinforce', true],\n    ['matchstick', true],\n    ['block', true],\n    ['mute', true],\n    ['brig', true],\n    ['captain', true],\n    ['investigate', false],\n    ['mutiny', false],\n]\n\nvar options = {\n    ...defaultMatchOptions,\n    ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions) : {},\n    tiles: {...defaultMatchOptions.tiles, ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions).tiles : {},},\n    cards: {...defaultMatchOptions.cards, ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions).cards : {},},\n};\n\nfor (let i in options) {\n    if (typeof options[i] == 'object' && !Array.isArray(options[i]))\n        options[i] = {\n            ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions)[i] : {},\n            ...options[i]\n        }\n}\n\nfunction NumberTweaker(props) {\n    return (\n        <ButtonGroup size=\"small\">\n            {props.bigChange ? <Button onClick={() => props.fn(-10)} disabled={props.disabled || props.state == props.min}>- -</Button> : null}\n            <Button onClick={() => props.fn(-1)} disabled={props.disabled || props.state == props.min}>-</Button>\n            <Button disabled>{props.state}</Button>\n            <Button onClick={() => props.fn(+1)} disabled={props.disabled || props.state == props.max}>+</Button>\n            {props.bigChange ? <Button onClick={() => props.fn(+10)} disabled={props.disabled || props.state == props.max}>++</Button> : null}\n        </ButtonGroup>\n    );\n}\n\nfunction MatchOptions(props) {\n    const classes = useStyles();\n\n    if (props.options)\n        options = props.options;\n\n    const sendUpdate = () => {\n        if (props.editable && props.started)\n            socket.emit('updateOptions', options);\n    }\n    const [publicity, setPublicity] = React.useState(options.public);\n    const handlePublicityChange = event => {\n        options.public = !publicity;\n        setPublicity(!publicity);\n        sendUpdate();\n    };\n    const [players, setPlayers] = React.useState(options.players);\n    const changePlayers = change => {\n        options.players += change;\n        if (options.players < allowedPlayers[0]) options.players = allowedPlayers[0];\n        if (options.players > allowedPlayers[1]) options.players = allowedPlayers[1];\n        setPlayers(options.players);\n        resetCards();\n        sendUpdate();\n    };\n    const [startHP, setStartHP] = React.useState(options.startHP);\n    const changeStartHP = change => {\n        options.startHP += change;\n        if (options.startHP < 1) options.startHP = 1;\n        if (options.startHP > 999) options.startHP = 999;\n        if (options.startHP > options.maxHP) changeMaxHP(options.startHP - options.maxHP);\n        setStartHP(options.startHP);\n        sendUpdate();\n    };\n    const [maxHP, setMaxHP] = React.useState(options.maxHP);\n    const changeMaxHP = change => {\n        options.maxHP += change;\n        if (options.maxHP < 1) options.maxHP = 1;\n        if (options.maxHP > 999) options.maxHP = 999;\n        if (options.startHP > options.maxHP) changeStartHP(options.maxHP - options.startHP);\n        setMaxHP(options.maxHP);\n        sendUpdate();\n    };\n    const [rockDamage, setRockDamage] = React.useState(options.rockDamage);\n    const changeRockDamage = (event, value) => {\n        value = Number(value);\n        options.rockDamage = value;\n        setRockDamage(value);\n        sendUpdate();\n    };\n    const [iceDamage, setIceDamage] = React.useState(options.iceDamage);\n    const changeIceDamage = (event, value) => {\n        value = Number(value);\n        options.iceDamage = value;\n        setIceDamage(value);\n        sendUpdate();\n    };\n    const [leaveDamage, setLeaveDamage] = React.useState(options.leaveDamage);\n    const changeLeaveDamage = (event, value) => {\n        value = Number(value);\n        options.leaveDamage = value;\n        setLeaveDamage(value);\n        sendUpdate();\n    };\n    const [treasureHeal, setTreasureHeal] = React.useState(options.treasureHeal);\n    const changeTreasureHeal = (event, value) => {\n        value = Number(value);\n        options.treasureHeal = value;\n        setTreasureHeal(value);\n        sendUpdate();\n    };\n    const [boardSize, setBoardSize] = React.useState([...options.boardSize]);\n    const changeBoardSize = (value, axis) => {\n        options.boardSize[axis] = value;\n        setBoardSize([...options.boardSize]);\n        resetTiles();\n        options.startPos = [Math.round((options.boardSize[0]-1)/2), Math.round((options.boardSize[1]-1)/2)];\n        setStartPos([...options.startPos]);\n        sendUpdate();\n    };\n    const [startPos, setStartPos] = React.useState([...options.startPos]);\n    const changeStartPos = (value, axis) => {\n        options.startPos[axis] = value;\n        setStartPos([...options.startPos]);\n        sendUpdate();\n    };\n    const [startDir, setStartDir] = React.useState(options.startDir);\n    const handleStartDirChange = event => {\n        options.startDir = event.target.value;\n        setStartDir(event.target.value);\n        sendUpdate();\n    };\n    const [revealTiles, setRevealTiles] = React.useState(options.revealTiles);\n    const handleRevealTilesChange = event => {\n        options.revealTiles = !revealTiles;\n        setRevealTiles(!revealTiles);\n        sendUpdate();\n    };\n    const [tiles, setTiles] = React.useState(options.tiles);\n    const changeTiles = (change, tile) => {\n        options.tiles[tile] += change;\n        setTiles({...tiles, [tile]: options.tiles[tile]});\n        if (options.treasuresNeeded > options.tiles.treasure) changeTreasuresNeeded(options.treasuresNeeded - options.tiles.treasure);\n        sendUpdate();\n    };\n    const [treasuresNeeded, setTreasuresNeeded] = React.useState(options.treasuresNeeded);\n    const changeTreasuresNeeded = change => {\n        options.treasuresNeeded += change;\n        if (options.treasuresNeeded < 1) options.treasuresNeeded = 1;\n        if (options.treasuresNeeded > options.tiles.treasure) options.treasuresNeeded = options.tiles.treasure;\n        if (options.treasuresNeeded > options.tiles.treasure) changeTreasuresNeeded(options.treasuresNeeded - options.tiles.treasure);\n        setTreasuresNeeded(options.treasuresNeeded);\n        sendUpdate();\n    };\n    const resetTiles = () => {\n        let newTiles = {...tiles, ...(options.boardSize[0]**options.boardSize[1] > Object.values(defaultMatchOptions.tiles).reduce((a,b)=>a+b) ? defaultMatchOptions.tiles : Object.fromEntries(Object.entries(defaultMatchOptions.tiles).map(e => [e[0], tilesAvailable.find(t => t[0] == e[0])[1] ? 1 : 0])))};\n        setTiles(newTiles);\n        options.tiles = {...newTiles};\n    };\n    const [handSize, setHandSize] = React.useState(options.handSize);\n    const changeHandSize = (event, value) => {\n        value = Number(value);\n        options.handSize = value;\n        setHandSize(value);\n        if (options.minPlayed > value)\n            changeMinPlayed({target: {value}});\n        if (options.maxPlayed > value)\n            changeMaxPlayed({target: {value}});\n        resetCards();\n        sendUpdate();\n    };\n    const [minPlayed, setMinPlayed] = React.useState(options.minPlayed);\n    const changeMinPlayed = event => {\n        options.minPlayed = event.target.value;\n        setMinPlayed(event.target.value);\n        sendUpdate();\n    };\n    const [maxPlayed, setMaxPlayed] = React.useState(options.maxPlayed);\n    const changeMaxPlayed = event => {\n        options.maxPlayed = event.target.value;\n        setMaxPlayed(event.target.value);\n        if (options.minPlayed > options.maxPlayed)\n            changeMinPlayed({target: {value: event.target.value}});\n        sendUpdate();\n    };\n    const [topPlayed, setTopPlayed] = React.useState(options.topPlayed);\n    const changeTopPlayed = (event, value) => {\n        value = Number(value);\n        options.topPlayed = value;\n        setTopPlayed(value);\n        resetCards();\n        sendUpdate();\n    };\n    const [evilsSeeCards, setEvilsSeeCards] = React.useState(options.evilsSeeCards);\n    const evilsSeeCardsChange = event => {\n        options.evilsSeeCards = !evilsSeeCards;\n        setEvilsSeeCards(!evilsSeeCards);\n        sendUpdate();\n    };\n    const [cards, setCards] = React.useState(options.cards);\n    const changeCards = (change, card) => {\n        options.cards[card] += change;\n        setCards({...cards, [card]: options.cards[card]});\n        sendUpdate();\n    };\n    const resetCards = () => {\n        if (cardsAvailable.filter(card => card[1]).map(card => options.cards[card[0]]).reduce((a,b)=>a+b) <= options.players*options.handSize+options.topPlayed) {\n            let newCards = {...cards, ...defaultMatchOptions.cards};\n            setCards(newCards);\n            options.cards = {...newCards};\n        }\n    };\n    const [votingAnonymity, setVotingAnonymity] = React.useState(options.votingAnonymity);\n    const handleVotingAnonymityChange = event => {\n        options.votingAnonymity = event.target.value;\n        setVotingAnonymity(event.target.value);\n        sendUpdate();\n    };\n    const [mode, setMode] = React.useState(options.mode);\n    const handleModeChange = event => {\n        options.mode = event.target.value;\n        setMode(event.target.value);\n        sendUpdate();\n    };\n    const [nameConvention, setNameConvention] = React.useState(options.names);\n    const handleNameConventionChange = event => {\n        options.names = event.target.value;\n        setNameConvention(event.target.value);\n        sendUpdate();\n    };\n    \n    let updateOptions = () => {\n        setPublicity(options.public);\n        setPlayers(options.players);\n        setStartHP(options.startHP);\n        setMaxHP(options.maxHP);\n        setRockDamage(options.rockDamage);\n        setIceDamage(options.iceDamage);\n        setLeaveDamage(options.leaveDamage);\n        setTreasureHeal(options.treasureHeal);\n        setBoardSize(options.boardSize);\n        setStartPos(options.startPos);\n        setStartDir(options.startDir);\n        setRevealTiles(options.revealTiles);\n        setTiles({...tiles, ...options.tiles});\n        setTreasuresNeeded(options.treasuresNeeded);\n        setTopPlayed(options.topPlayed);\n        setHandSize(options.handSize);\n        setMinPlayed(options.minPlayed);\n        setMaxPlayed(options.maxPlayed);\n        setCards({...cards, ...options.cards});\n        setVotingAnonymity(options.votingAnonymity);\n        setMode(options.mode);\n        setNameConvention(options.names);\n    };\n    React.useEffect(() => {\n        sendUpdate();\n        window.addEventListener('matchOptionsChanged', updateOptions);\n        return () => window.removeEventListener('matchOptionsChanged', updateOptions);\n    }, []);\n\n    let nrCards = cardsAvailable.filter(card => card[1]).map(card => cards[card[0]]).reduce((a,b)=>a+b);\n\n    return (\n        <div>\n            <Button color={props.editable ? 'primary' : 'default'} size=\"small\" disabled={!props.editable} onClick={() => {\n                options = {...options, ...defaultMatchOptions};\n                updateOptions();\n                sendUpdate();\n            }}>Reset to defaults</Button>\n            <Button color=\"secondary\" size=\"small\" onClick={() => {\n                presetLoader(props);\n            }}>Save/Load preset</Button>\n            <Button color=\"primary\" size=\"small\" onClick={() => {\n                localStorage.MatchOptions = JSON.stringify(options);\n            }}>Save these options</Button>\n            <Divider style={{marginTop: 16}} />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Privacy</FormLabel>\n                <Typography component=\"div\">\n                    <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                        <Grid item><LockIcon /></Grid>\n                        <Grid item>\n                            <Switch color=\"primary\" checked={publicity} onChange={handlePublicityChange} disabled={!props.editable} />\n                        </Grid>\n                        <Grid item><PublicIcon /></Grid>\n                    </Grid>\n                </Typography>\n\n                {props.started ? <Button color={props.editable ? 'primary' : 'disabled'} size=\"small\" onClick={() => socket.emit('newRoomCode')} disabled={!props.editable}>New room code</Button> : null}\n            </FormControl>\n\n            <Divider />\n            \n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max players</FormLabel>\n                <NumberTweaker fn={changePlayers} min={allowedPlayers[0]} max={allowedPlayers[1]} state={players} disabled={props.started} bigChange />\n            </FormControl>\n            <Typography>Changing this may also reset the amounts of each type of cards. This cannot be changed in the lobby.</Typography>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Starting ship HP</FormLabel>\n                <NumberTweaker fn={changeStartHP} min={1} max={999} state={startHP} disabled={!props.editable} bigChange />\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Maximum ship HP</FormLabel>\n                <NumberTweaker fn={changeMaxHP} min={1} max={999} state={maxHP} disabled={!props.editable} bigChange />\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>HP lost per rock hit</FormLabel>\n                <RadioGroup value={rockDamage} onChange={changeRockDamage} row>\n                    {[1, 2, 3, 4].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>HP lost per iceberg hit</FormLabel>\n                <RadioGroup value={iceDamage} onChange={changeIceDamage} row>\n                    {[1, 2, 3, 4].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>HP lost when ship tries to move out of the board</FormLabel>\n                <RadioGroup value={leaveDamage} onChange={changeLeaveDamage} row>\n                    {[0, 1, 2, 3].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>HP healed per treasure found</FormLabel>\n                <RadioGroup value={treasureHeal} onChange={changeTreasureHeal} row>\n                    {[0, 1, 2, 3].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Board Size</FormLabel>\n            </FormControl>\n            <br />\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={boardSize[1]}\n                    onChange={e => changeBoardSize(e.target.value, 1)}\n                    displayEmpty\n                    className={classes.smallSelect}\n                    disabled={!props.editable}\n                >\n                    {[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Width</FormHelperText>\n            </FormControl>\n            <span style={{\n                position: 'relative',\n                top: 10,\n                fontSize: 35,\n            }}>x</span>\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={boardSize[0]}\n                    onChange={e => changeBoardSize(e.target.value, 0)}\n                    displayEmpty\n                    className={classes.smallSelect}\n                    disabled={!props.editable}\n                >\n                    {[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Height</FormHelperText>\n            </FormControl>\n            <span style={{\n                position: 'relative',\n                top: 14,\n                fontSize: 16,\n            }}>= {boardSize[1] * boardSize[0]} tiles</span>\n            <Typography>Changing this may also reset the amounts of each type of tile and the ship's starting location.</Typography>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Ship starting location</FormLabel>\n            </FormControl>\n            <br />\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={startPos[1]}\n                    onChange={e => changeStartPos(e.target.value, 1)}\n                    displayEmpty\n                    className={classes.smallSelect}\n                    disabled={!props.editable}\n                >\n                    {Array(boardSize[1]).fill(null).map((i, e) => e).map(n => <MenuItem key={n} value={n}>{n+1}</MenuItem>)}\n                </Select>\n                <FormHelperText>X</FormHelperText>\n            </FormControl>\n            <span style={{\n                position: 'relative',\n                top: 0,\n                fontSize: 35,\n            }}>, </span>\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={startPos[0]}\n                    onChange={e => changeStartPos(e.target.value, 0)}\n                    displayEmpty\n                    className={classes.smallSelect}\n                    disabled={!props.editable}\n                >\n                    {Array(boardSize[0]).fill(null).map((i, e) => e).map(n => <MenuItem key={n} value={n}>{n+1}</MenuItem>)}\n                </Select>\n                <FormHelperText>Y</FormHelperText>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Ship starting direction</FormLabel>\n                <Select\n                    value={startDir}\n                    onChange={handleStartDirChange}\n                    disabled={!props.editable}\n                >\n                    <MenuItem value={0}>Random (Any)</MenuItem>\n                    <MenuItem value={1}>Random (Straight)</MenuItem>\n                    <MenuItem value={2}>Random (Diagonal)</MenuItem>\n                    <MenuItem value={3}>N</MenuItem>\n                    <MenuItem value={4}>NE</MenuItem>\n                    <MenuItem value={5}>E</MenuItem>\n                    <MenuItem value={6}>SE</MenuItem>\n                    <MenuItem value={7}>S</MenuItem>\n                    <MenuItem value={8}>SW</MenuItem>\n                    <MenuItem value={9}>W</MenuItem>\n                    <MenuItem value={10}>NW</MenuItem>\n                </Select>\n                <FormHelperText>{(() => ({\n                    0: 'Ship can start facing any direction',\n                    1: 'Ship can start facing any of the following directions: N, E, S, W',\n                    2: 'Ship can start facing any of the following directions: NE, SE, SW, NW',\n                    3: '↑',\n                    4: '↗',\n                    5: '→',\n                    6: '↘',\n                    7: '↓',\n                    8: '↙',\n                    9: '←',\n                    10: '↖',\n                }[startDir]))()}</FormHelperText>\n            </FormControl>\n\n            <Divider />\n\n            <FormControlLabel\n                control={<Checkbox color=\"primary\" checked={revealTiles} onChange={handleRevealTilesChange} disabled={!props.editable} />}\n                label=\"Play with all tiles revealed?\"\n                labelPlacement=\"start\"\n            />\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Tiles</FormLabel>\n                <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                    {\n                        tilesAvailable.map(tile => <span style={{marginRight: 5, textAlign: 'center'}}>\n                            <img src={`/tiles/${tile[0]}.png`} width={50} />\n                            <br />\n                            <NumberTweaker fn={change => changeTiles(change, tile[0])} min={tile[1] ? 1 : 0} max={(boardSize[0]*boardSize[1])-(Object.values(tiles).reduce((a,b)=>a+b)-tiles[tile[0]])-1} state={tiles[tile[0]]} disabled={!props.editable} />\n                        </span>)\n                    }\n                </div>\n                <Typography>There will be {(boardSize[0]*boardSize[1])-Object.values(tiles).reduce((a,b)=>a+b)} water tile(s).</Typography>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Treasures needed for pirates to win</FormLabel>\n                <NumberTweaker fn={changeTreasuresNeeded} min={1} max={tiles.treasure} state={treasuresNeeded} disabled={!props.editable} bigChange />\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Cards played from the top of the deck each turn</FormLabel>\n                <RadioGroup value={topPlayed} onChange={changeTopPlayed} row>\n                    {[0, 1, 2, 3].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n                <Typography>Changing this may also reset the amounts of each type of cards.</Typography>\n            </FormControl>\n\n            <Divider />\n\n            <FormControlLabel\n                control={<Checkbox color=\"primary\" checked={evilsSeeCards} onChange={evilsSeeCardsChange} disabled={!props.editable} />}\n                label=\"Tell sea monsters which cards were played from the top of the deck?\"\n                labelPlacement=\"start\"\n            />\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Cards drawn per hand</FormLabel>\n                <RadioGroup value={handSize} onChange={changeHandSize} row>\n                    {[2, 3, 4, 5].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n                <Typography>Changing this may also reset the amounts of each type of cards. A deck with at least {players*handSize+topPlayed} non-removable cards is required (also changes based on max players and \"Cards played from the top of the deck each turn\").</Typography>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Minimum and maximum cards played per player per turn</FormLabel>\n            </FormControl>\n            <br />\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={minPlayed}\n                    onChange={changeMinPlayed}\n                    displayEmpty\n                    className={classes.smallSselect}\n                    disabled={!props.editable}\n                >\n                    {[0, 1, 2, 3, 4, 5].filter(n => n <= handSize && n <= maxPlayed).map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Min</FormHelperText>\n            </FormControl>\n            <span style={{\n                position: 'relative',\n                top: 10,\n                fontSize: 35,\n            }}>/</span>\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={maxPlayed}\n                    onChange={changeMaxPlayed}\n                    displayEmpty\n                    className={classes.smallSselect}\n                    disabled={!props.editable}\n                >\n                    {[1, 2, 3, 4, 5].filter(n => n <= handSize).map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Max</FormHelperText>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Cards</FormLabel>\n                <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                    {\n                        cardsAvailable.map(card => <span style={{marginRight: 5, textAlign: 'center'}}>\n                            <img src={`/cards/${card[0]}.png`} width={70} />\n                            <br />\n                            <NumberTweaker fn={change => changeCards(change, card[0])} min={card[1] ? (nrCards <= players*handSize+topPlayed ? cards[card[0]] : 0) : 0} max={99} state={cards[card[0]]} disabled={!props.editable} />\n                        </span>)\n                    }\n                </div>\n                <Typography>There's {Object.values(cards).reduce((a,b)=>a+b)} cards in this deck ({nrCards} non-removable).</Typography>\n            </FormControl>\n            \n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Voting anonymity</FormLabel>\n                <Select\n                    value={votingAnonymity}\n                    onChange={handleVotingAnonymityChange}\n                    disabled={!props.editable}\n                >\n                    <MenuItem value={0}>Open</MenuItem>\n                    <MenuItem value={1}>Reveal</MenuItem>\n                    <MenuItem value={2}>Anonymous</MenuItem>\n                </Select>\n                <FormHelperText>{(() => ({\n                    0: 'Players\\' votes are always visible to everyone',\n                    1: 'Players\\' votes are only visible after everyone has voted and they are no longer allowed to change their vote',\n                    2: 'Players\\' votes are never shown',\n                }[votingAnonymity]))()}</FormHelperText>\n            </FormControl>\n            \n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Mode</FormLabel>\n                <Select\n                    value={mode}\n                    onChange={handleModeChange}\n                    disabled={!props.editable}\n                >\n                    <MenuItem value={0}>Sea Sight</MenuItem>\n                    <MenuItem value={1}>Sea Blindness</MenuItem>\n                    <MenuItem value={2}>Allied Traitor</MenuItem>\n                    <MenuItem value={3}>Open Seas</MenuItem>\n                </Select>\n                <FormHelperText>{(() => ({\n                    0: 'All Sea Monsters know their teammate (if they have one)',\n                    1: 'Sea Monsters don\\'t know who their teammate is',\n                    2: 'Play with Allied Traitor rules (see rulebook)',\n                    3: 'Pirates only! No Sea Monsters in this mode!',\n                }[mode]))()}</FormHelperText>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Naming convention</FormLabel>\n                <Select\n                    value={nameConvention}\n                    onChange={handleNameConventionChange}\n                    disabled={!props.editable}\n                >\n                    <MenuItem value={0}>Normal</MenuItem>\n                    <MenuItem value={1}>Gifted</MenuItem>\n                    <MenuItem value={2}>Random</MenuItem>\n                </Select>\n                <FormHelperText>{(() => ({\n                    0: 'Players use their chosen name',\n                    1: 'Players\\' chosen names are shuffled between them',\n                    2: 'Each player gets a pirate name',\n                }[nameConvention]))()}</FormHelperText>\n            </FormControl>\n        </div>\n    );\n}\n\nfunction changeOptions(newOptions) {\n    options = newOptions;\n    window.dispatchEvent(new Event('matchOptionsChanged'));\n}\n\nfunction hostChanged(amNowHost) {\n    if (dialog.state.open && dialog.editable != amNowHost)\n        showMatchOptions({editable: amNowHost, started: true});\n}\n\nvar dialog = {\n    state: {\n        open: false,\n    }\n};\n\nasync function showMatchOptions(props) {\n    let elem;\n\n    dialog = await showDialog({\n        ...(props.started ? {\n            title: 'Match options',\n            description: `Current options${props.ingame ? '' : ' (editable by the host)'}:`,\n        } : {\n            title: 'Create Match',\n            description: 'Match options:',\n            buttonText: 'Create',\n            buttonAction: () => {\n                dialog.handleClose();\n                socket.emit('createMatch', options);\n            }\n        }),\n    }, <MatchOptions {...props} />);\n    dialog.editable = props.editable;\n}\n\nfunction PresetLoader(props) {\n    let [enteredOptions, setEnteredOptions] = React.useState('');\n    let copyHelp = 'Copy the options code for your currently chosen match options.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    return (<div>\n        <TextField\n            label=\"Options code\"\n            defaultValue=\"\"\n            value={enteredOptions}\n            onChange={e => setEnteredOptions(e.target.value)}\n            helperText=\"Paste your options code here and click Load to load it\"\n            variant=\"outlined\"\n            disabled={!props.editable}\n        />\n        <Button color={props.editable ? 'primary' : 'default'} disabled={!props.editable} onClick={() => {\n            try {\n                options = {...options, ...JSON.parse(atob(enteredOptions))};\n                showMatchOptions(props);\n            } catch(e) {\n                alert(e);\n            }\n        }}>Load</Button>\n\n        <Divider />\n        <Tooltip title={copyTitle}>\n            <IconButton onClick={() => {\n                copy(btoa(JSON.stringify(options)));\n                setCopyTitle('Copied to clipboard!');\n                setTimeout(() => {\n                    setCopyTitle(copyHelp);\n                }, 3000);\n            }}><LinkIcon /></IconButton>\n        </Tooltip>\n    </div>);\n}\n\nasync function presetLoader(props) {\n    let elem;\n\n    dialog = await showDialog({\n        title: 'Preset loader/saver',\n        buttonText: 'Match options',\n        buttonAction: () => showMatchOptions(props),\n    }, <PresetLoader {...props} />);\n}\n\nexport default {\n    showMatchOptions,\n    changeOptions,\n    hostChanged,\n};","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        width: 125,\n        marginRight: 5,\n    },\n}));\n\nfunction Cards() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Typography variant=\"h4\">Cards</Typography>\n            <Typography variant=\"h5\">Movement</Typography>\n            <img src=\"/cards/n1.png\" className={classes.card} />\n            <img src=\"/cards/w2.png\" className={classes.card} />\n            <img src=\"/cards/se3.png\" className={classes.card} />\n            <Typography>These cards allow you to move the ship a specified amount in a specified direction. The direction is the letter and border colour, and the amount is the number displayed.</Typography>\n            <br />\n            <Typography variant=\"h5\">Direction movement cards</Typography>\n            <img src=\"/cards/turnl2.png\" className={classes.card} />\n            <img src=\"/cards/turnr4.png\" className={classes.card} />\n            <img src=\"/cards/forward2.png\" className={classes.card} />\n            <Typography>Turning cards turn the ship a specified amount, and forward cards move the ship in whatever direction the ship is facing. The ship is a lot harder to control using these.</Typography>\n            <br />\n            <Typography variant=\"h5\">Special movement cards</Typography>\n            <Typography variant=\"h6\">Relocate</Typography>\n            <img src=\"/cards/relocate.png\" className={classes.card} />\n            <Typography>The ship moves back to where it started this match.</Typography>\n            <br />\n            <Typography variant=\"h6\">Persist</Typography>\n            <img src=\"/cards/persist.png\" className={classes.card} />\n            <Typography>The action of the last (not including turning or special) movement card to be played is performed again. If no other movement cards have been played this turn, the last movement card from previous turns is played.</Typography>\n            <br />\n            <Typography variant=\"h6\">Chaos</Typography>\n            <img src=\"/cards/chaos.png\" className={classes.card} />\n            <Typography>The ship moves to a random location without turning.</Typography>\n            <br />\n            <Typography variant=\"h6\">Bravery</Typography>\n            <img src=\"/cards/bravery.png\" className={classes.card} />\n            <Typography>The ship keeps going forward in the direction it's facing until it gets to the edge of the board, then it will take damage for trying to move out of the board.</Typography>\n            <br />\n\n            <Typography variant=\"h5\">Compass</Typography>\n            <img src=\"/cards/compass0.png\" className={classes.card} />\n            <img src=\"/cards/compass1.png\" className={classes.card} />\n            <img src=\"/cards/compass3.png\" className={classes.card} />\n            <Typography>When a compass card is played, all tiles that the card specifies (with grey squares) are flipped over to be seen. Tiles with effects (e.g. treasure, rock) don't do anything when revealed - the ship must move over them for that to happen.</Typography>\n            <br />\n\n            <Typography variant=\"h5\">Healing cards</Typography>\n            <Typography variant=\"h6\">Hammer card & Nail card</Typography>\n            <img src=\"/cards/hammer.png\" className={classes.card} />\n            <img src=\"/cards/nail.png\" className={classes.card} />\n            <Typography>If both a hammer card and a nail card are played in the same turn, the ship is healed for 1HP. The ship cannot be healed twice in one turn this way.</Typography>\n            <br />\n            <Typography variant=\"h6\">Hammer & nail</Typography>\n            <img src=\"/cards/hammernail.png\" className={classes.card} />\n            <Typography>The ship is immediately healed for 1HP. This card is permanently discarded after being played, whether it heals the ship or not (i.e. the ship's HP is full and cannot be healed further).</Typography>\n            <br />\n            <Typography variant=\"h6\">Reinforce</Typography>\n            <img src=\"/cards/reinforce.png\" className={classes.card} />\n            <Typography>After this card is played, the ship cannot take any damage until this turn has ended.</Typography>\n            <br />\n            <Typography variant=\"h6\">Lookout</Typography>\n            <img src=\"/cards/lookout.png\" className={classes.card} />\n            <Typography>After this card is played, if the ship would take damage during the same turn, that damage is blocked, then the effect of this card ends.</Typography>\n            <br />\n\n            <Typography variant=\"h5\">Detriment Cards</Typography>\n            <Typography variant=\"h6\">Matchstick</Typography>\n            <img src=\"/cards/matchstick.png\" className={classes.card} />\n            <Typography>The ship takes 1 damage upon this card being played.</Typography>\n            <br />\n            <Typography variant=\"h6\">Block</Typography>\n            <img src=\"/cards/block.png\" className={classes.card} />\n            <Typography>The card played after this card (same turn only) will have no effect.</Typography>\n            <br />\n            <Typography variant=\"h6\">Mute</Typography>\n            <img src=\"/cards/mute.png\" className={classes.card} />\n            <Typography>When this card is played, no one can talk during that turn's discussion or voting phase.</Typography>\n            <br />\n\n            <Typography variant=\"h5\">Voting</Typography>\n            <Typography>Voting cards call for an action to be voted on. If multiple voting cards are played in the same turn, only one is used. The card used is the one lowest on the following list.</Typography>\n            <br />\n            <Typography variant=\"h6\">The Brig</Typography>\n            <img src=\"/cards/brig.png\" className={classes.card} />\n            <Typography>If someone gets enough votes, they will not be able to play cards for the next two turns. They will still be able to talk and vote.</Typography>\n            <br />\n            <Typography variant=\"h6\">Captain</Typography>\n            <img src=\"/cards/captain.png\" className={classes.card} />\n            <Typography>If someone gets enough votes, only they will play cards next turn.</Typography>\n            <br />\n            <Typography variant=\"h6\">Investigate</Typography>\n            <img src=\"/cards/investigate.png\" className={classes.card} />\n            <Typography>If someone gets enough votes, they can choose another player to find out the team (pirate or sea monster) of. This card is permanently discarded if a player is successfully investigated.</Typography>\n            <br />\n            <Typography variant=\"h6\">Mutiny</Typography>\n            <img src=\"/cards/mutiny.png\" className={classes.card} />\n            <Typography>If someone gets enough votes, they're forced off the ship and cannot play cards, talk, vote, or receive votes for the rest of the game. If this player was on the sea monsters' team, the pirates win. This card is permanently discarded if a player is successfully mutinied.</Typography>\n        </div>\n    );\n};\n\nexport default Cards;","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction Turn() {\n    return (\n        <div>\n            <Typography variant=\"h4\">Turn</Typography>\n            <Typography variant=\"h5\">Selection phase</Typography>\n            <Typography>First, the cards in the draw pile are counted, and if there aren't enough to deal everyone a hand, the discard pile is shuffled in with the draw pile. Then, 3 cards are dealt to each player. They each select one to play. Everyone's selected cards are then collected and shuffled. Talking is not allowed during the selection phase.</Typography>\n            <br />\n            <Typography variant=\"h5\">Playing phase</Typography>\n            <Typography>In the playing phase, the selected cards (which have been shuffled, so no one knows who played which) are revealed one by one, performing the action on the played card each time. Talking is not allowed during the playing phase.</Typography>\n            <br />\n            <Typography variant=\"h5\">Discussion phase</Typography>\n            <Typography>During the discussion phase, players may claim which card they played and which they had in their hand as well as discuss anything else important. Ask anyone any question you want, but the answer may not always be the truth. When ready to move on to the next turn, players can click ready. Everyone needs to click ready for the turn to end. If a voting card was played in the playing phase, this phase is replaced with the voting phase.</Typography>\n            <br />\n            <Typography variant=\"h5\">Voting phase</Typography>\n            <Typography>This phase only happens if a voting card was played in the playing phase. Players may discuss the same as they would during the discussion, but instead of readying up, they must vote for the action on the card. Votes are not revealed until everyone has made their vote. There must be at least [number of alive players - number of sea monsters] of identical votes, or nothing will happen, and the next phase starts as normal. You may vote for yourself.</Typography>\n        </div>\n    );\n};\n\nexport default Turn;","import Cards from './Cards.js';\nimport Premise from './Premise';\nimport Roles from './Roles';\nimport Mode2 from './Mode2';\nimport SpecialCases from './SpecialCases';\nimport Tiles from './Tiles';\nimport Turn from './Turn';\n\nexport default {\n    Cards,\n    Premise,\n    Roles,\n    Mode2,\n    SpecialCases,\n    Tiles,\n    Turn,\n};","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\n\nfunction Premise() {\n    let videoID = 'ScMzIvxBSi4';\n    return (\n        <div>\n            <img src=\"/icon.png\" style={{maxWidth: '100%', width: 300}} />\n            <Typography>Clueless Captains is a game about going on a pirate adventure to try and find the hidden treasures. You can play with between 2 and 8 people but for the best experience we reccommend anything between 3 and 5.</Typography>\n            <br />\n            <Typography variant=\"h5\">The gist of what's going on</Typography>\n            <Typography>In Clueless Captains, all players simultaneously control a ship on a grid. You're trying to find all the treasure in this area, but some of your crew may be attempting to sabotage this mission by sinking your ship. The ship starts with a set amount of HP which is lost when it takes damage from rocks or other sources. HP can be regained from finding treasure (if this option is enabled). When the ship's HP becomes 0, it sinks.</Typography>\n            <br />\n            <Typography variant=\"h5\">Video</Typography>\n            <Typography>Here's <Link href={`https://youtu.be/${videoID}`} target=\"_blank\" rel=\"noopener\">a YouTube video</Link> showing the game in action. Most of the rules are explained here, but you won't know every nook and cranny of the game. This is enough knowledge, though, as you can come back and read the rules of the game at any point during a match.</Typography>\n            <iframe style={{width: '100%', height: '250px'}} src={`https://www.youtube.com/embed/${videoID}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n            <Typography variant=\"h6\">Timestamps</Typography>\n            <Typography>\n                The timestamp of each important point in the video above.\n                <ul>\n                    <li>0:00 - Intro</li>\n                    <li>0:01 - Roles</li>\n                    <li>1:00 - Selection phase & Cards</li>\n                    <li>1:01 - Playing phase & Tiles</li>\n                    <li>1:02 - Discussion phase</li>\n                    <li>1:03 - Voting phase</li>\n                </ul>\n            </Typography>\n        </div>\n    );\n};\n\nexport default Premise;","import React from 'react';\nimport { Typography, Divider } from '@material-ui/core';\n\nfunction Roles() {\n    return (\n        <div>\n            <Typography variant=\"h4\">Roles</Typography>\n            <Typography>All crewmates are given one of two roles at the start of the game. This role decides their win condition.</Typography>\n            <Divider />\n\n            <Typography variant=\"h5\">Pirate</Typography>\n            <img src=\"/roles/pirate.png\" width={100} />\n            <Typography>The pirates discovered an area with tons of (seemingly) abandoned booty just waiting to be plundered! They're here, and they won't stop until they take it all (or die trying)! Pirates should almost always be telling the truth to their crewmates.</Typography>\n            <br />\n            <Typography><u>Pirates win if all the treasures are found or if a Sea monster is killed.</u></Typography>\n            <Divider />\n\n            <Typography variant=\"h5\">Sea monster</Typography>\n            <img src=\"/roles/seamonster.png\" width={100} />\n            <Typography>The sea monsters discovered filthy pirates heading into their territory, and pirates could only be there for one reason - treasure. This treasure means everything to them, so they've disguised themselves as pirates and infiltrated the ship. They'll do anything they can to foil the pirates' foolish plan.<br /><br />Sea monsters are heavily outnumbered by Pirates, and may lose (by getting killed) if their identity is revealed, so they'll have to blend in with the pirates by lying about which cards they play.</Typography>\n            <br />\n            <Typography><u>Sea monsters win if the ship sinks.</u></Typography>\n            <br />\n            <Typography>In 1-2 player games, there are no sea monsters. In 3-5 player games, there is 1 sea monster. In 6-8 player games, there are 2 sea monsters.</Typography>\n        </div>\n    );\n};\n\nexport default Roles;","import React from 'react';\nimport { Typography, Divider } from '@material-ui/core';\n\nfunction Mode2() {\n    return (\n        <div>\n            <Typography variant=\"h4\">Allied Traitor Mode</Typography>\n            <Typography>Allied Traitor is an alternate gamemode which is available with 6-8 players. It adds some new roles and changes the way the game is played. If the \"Play Allied Traitor when available\" match option is enabled and there aren't enough players, the Sea Blindness mode will be used instead.</Typography>\n            <Divider />\n\n            <Typography variant=\"h5\">Pirate Roles</Typography>\n            <Typography variant=\"h6\">Pirate</Typography>\n            <img src=\"/roles/pirate.png\" width={100} />\n            <Typography>same as the normal pirate lol</Typography>\n            <br />\n            <Typography variant=\"h6\">Biologist</Typography>\n            <img src=\"/roles/biologist.png\" width={100} />\n            <Typography>There is 1 biologist in a game. This royal biologist wins with the pirates. The biologist knows the role of every player, but the pirates hold a grudge against the royals, so the pirates can't find out who the biologist is, and neither can the Sea Master, because they will out the biologist to the pirates. Therefore, the biologist must use the information they have to help them win the game, while laying low about their identity.</Typography>\n            <Divider />\n\n            <Typography variant=\"h5\">Sea Monster Roles</Typography>\n            <Typography variant=\"h6\">Sea Master</Typography>\n            <img src=\"/roles/seamaster.png\" width={100} />\n            <Typography>There is 1 Sea Master in a game. The Sea Master always knows who the Sea Servant is. After the pirates win (if a sea monster is mutinied or all treasures are found), the sea monsters still have a chance! The Sea Master chooses a player who they think was the biologist. If they're correct, the Sea Monsters win instead of the pirates.</Typography>\n            <br />\n            <Typography variant=\"h6\">Sea Servant</Typography>\n            <img src=\"/roles/seaservant.png\" width={100} />\n            <Typography>There is 1 Sea Servant in a game. They're forgetful, and have no idea who the Sea Master disguised themself as - the Sea Servant does not know who the Sea Master is.</Typography>\n            <br />\n        </div>\n    );\n};\n\nexport default Mode2;","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction SpecialCases() {\n    return (\n        <div>\n            <Typography variant=\"h4\">Special cases</Typography>\n            <Typography variant=\"h6\">Ship tries to move out of the board</Typography>\n            <Typography>The ship loses a configurable amount of HP (default 1), and stays where it is.</Typography>\n            <br />\n            <Typography variant=\"h6\">Captain + Brig interactions</Typography>\n            <Typography>If a captain is voted for, everyone else who is in the brig will have their jail time extended by one turn to compensate.<br />If a player in the brig is voted as captain, they will be freed from the brig and will be able to play cards until jailed again.</Typography>\n            <br />\n            <Typography variant=\"h6\">Finding all treasure and sinking on the same turn</Typography>\n            <Typography>In this game it is impossible to draw. If you find the last treasure and sink on the same turn, whichever one happened first dictates the outcome, example:</Typography>\n            <br />\n            <Typography><i>\n                Card one moves you on to the last treasure tile,<br />\n                Card two bumps you into a rock, sinking the ship.<br />\n                <br />\n                In this case the pirates would win as they got the treasure before sinking.\n            </i></Typography>\n\n        </div>\n    );\n};\n\nexport default SpecialCases;","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction Tiles() {\n    return (\n        <div>\n            <Typography variant=\"h4\">Tiles</Typography>\n            <Typography>The game board is a grid made up of tiles. Here is what each tile does.</Typography>\n            <br />\n            <Typography variant=\"h5\">Undiscovered</Typography>\n            <img src=\"/tiles/unknown.png\" width={80} />\n            <Typography>This tile could be anything! Reveal what's hiding underneath by moving over it with the ship or using a compass card next to it. Every tile except the ship's starting tile begins covered by an Undiscovered tile (unless you're playing with the \"Play with all tiles revealed\" option, then no tiles are undiscovered).</Typography>\n            <br />\n            <Typography variant=\"h5\">Water</Typography>\n            <img src=\"/tiles/water.png\" width={80} />\n            <Typography>These tiles do nothing.</Typography>\n            <br />\n            <Typography variant=\"h5\">Treasure</Typography>\n            <img src=\"/tiles/treasure.png\" width={80} />\n            <Typography>Move onto a treasure tile to collect it, turning the tile into a water tile. If the pirates collect all of these, they win. You can change the match options so that these restore your HP upon collections.</Typography>\n            <br />\n            <Typography variant=\"h5\">Rock</Typography>\n            <img src=\"/tiles/rock.png\" width={80} />\n            <Typography>Rock tiles deal 1 damage (configurable amount) to the ship each time you cross over them.</Typography>\n            <br />\n            <Typography variant=\"h5\">Iceberg</Typography>\n            <img src=\"/tiles/iceberg.png\" width={80} />\n            <Typography>Same effect as the rock tile, except it breaks and turns into a water tile upon being touched by the ship (after dealing damage, of course).</Typography>\n            <br />\n            <Typography variant=\"h5\">Waves</Typography>\n            <img src=\"/tiles/waves.png\" width={80} />\n            <Typography>Wave tiles push the ship 1 extra tile in the direction it's facing.</Typography>\n            <br />\n            <Typography variant=\"h5\">Storm</Typography>\n            <img src=\"/tiles/storm.png\" width={80} />\n            <Typography>Storm tiles turn the ship to face a random direction then teleport it to a random tile.</Typography>\n            <br />\n            <Typography variant=\"h5\">Booze</Typography>\n            <img src=\"/tiles/alcohol.png\" width={80} />\n            <Typography>Booze tiles turn the ship to face a random direction then push it forward 1 tile in that direction.</Typography>\n            <br />\n            <Typography variant=\"h5\">Whirlpools</Typography>\n            <img src=\"/tiles/whirlpoolleft.png\" width={80} />\n            <img src=\"/tiles/whirlpoolright.png\" width={80} />\n            <Typography>Upon touching a whirlpool tile, the ship turns 90° the way the whirlpool is facing.</Typography>\n        </div>\n    );\n};\n\nexport default Tiles;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport sections from './sections';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n    },\n    tabs: {\n        minWidth: 90,\n        width: 90,\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n    tab: {\n        minWidth: 'unset',\n    },\n    tabPanel: {\n        overflowY: 'scroll',\n    },\n}));\n\nfunction DialogCentre() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                classes={{\n                    root: classes.tabs,\n                }}\n            >\n                <Tab className={classes.tab} label=\"Premise\" />\n                <Tab className={classes.tab} label=\"Roles\" />\n                <Tab className={classes.tab} label=\"Allied Traitor\" />\n                <Tab className={classes.tab} label=\"Tiles\" />\n                <Tab className={classes.tab} label=\"Turn\" />\n                <Tab className={classes.tab} label=\"Cards\" />\n                <Tab className={classes.tab} label=\"Special cases\" />\n            </Tabs>\n            <TabPanel classes={classes.tabPanel} value={value} index={0}>\n                <sections.Premise />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={1}>\n                <sections.Roles />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={2}>\n                <sections.Mode2 />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={3}>\n                <sections.Tiles />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={4}>\n                <sections.Turn />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={5}>\n                <sections.Cards />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={6}>\n                <sections.SpecialCases />\n            </TabPanel>\n        </div>\n    );\n};\n\nexport default DialogCentre;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogCentre from './DialogCentre.js';\n\nconst useStyles = makeStyles((theme) => ({\n    centre: {\n        padding: 0\n    }\n}));\n\nfunction RulesDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    exp.openRules = handleClickOpen;\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            disablePortal\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">Rules</DialogTitle>\n            <DialogContent classes={{root: classes.centre}} dividers>\n                <DialogCentre />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"secondary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst exp = {};\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><RulesDialog /></ThemeProvider>, document.getElementById('rules'));\n\nexport default exp;","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport BookIcon from '@material-ui/icons/Book';\nimport RulesDialog from './RulesDialog';\n\nconst ShowRulesIcon = BookIcon;\n\nfunction showRules() {\n    RulesDialog.openRules();\n}\n\nfunction ShowRulesButton() {\n    return <IconButton onClick={showRules}><ShowRulesIcon /></IconButton>;\n}\n\nexport default {\n    ShowRulesIcon,\n    ShowRulesButton,\n    showRules\n};","import React from 'react';\nimport { Typography, Button, Divider, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeInput from './CodeInput';\nimport NameInput from './NameInput';\nimport ColorPicker from '../Lobby/ColorPicker';\nimport socket from '../socket';\nimport showMatchOptions from './showMatchOptions';\nimport showDialog from '../Dialog/show';\nimport playerColours from '../Match/playerColours.json';\nimport rules from '../Rules';\nimport { PinDropSharp } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n    logoImage: {\n        display: 'block',\n        textAlign: 'center',\n        margin: 'auto',\n        maxWidth: 350,\n    },\n\n    controls: {\n        textAlign: 'center',\n        border: '1px solid #0000001f',\n        borderRadius: 10,\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Typography className={classes.title} variant=\"h3\" gutterBottom><img className={classes.logoImage} src=\"/iconanimated.png\" alt=\"Clueless Captains\" /></Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Embark on a pirate adventure with your friends. <Link onClick={rules.showRules}>Read the rules <rules.ShowRulesIcon fontSize=\"inherit\" /></Link>\n            </Typography>\n\n            <div className={classes.controls}>\n                <NameInput />\n                <ColorPicker selected={localStorage.cccolor ? Number(localStorage.cccolor) : (() => {localStorage.cccolor = Math.floor(Math.random() * playerColours.length);return localStorage.cccolor})()} matchInfo={null} />\n\n                <Divider />\n                <br />\n\n                <Button size=\"large\" color=\"primary\" onClick={() => socket.emit('findMatch')}>Find Match</Button>\n                <br />\n                <Button size=\"small\" color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions({editable: true, started: false})}>Create Match</Button>\n\n                <br /><br /><br />\n\n                <CodeInput />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Typography, Divider, Button, ButtonGroup, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\nimport socket from '../socket';\nimport copy from 'clipboard-copy';\nimport playerColours from '../Match/playerColours.json';\nimport NameInput from '../Home/NameInput';\nimport ColorPicker from './ColorPicker';\nimport showDialog from '../Dialog/show';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport rules from '../Rules';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    privacyIcon: {\n        marginRight: 10\n    },\n\n    table: {\n        width: 400,\n        margin: 'auto',\n    },\n\n    head: {\n        backgroundColor: '#ececec',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    you: {\n        textDecoration: 'underline',\n    },\n});\n\nfunction Lobby(props) {\n    const classes = useStyles();\n\n    let tableBody = [];\n    let amHost = socket.id.startsWith(props.matchInfo.host);\n    for (let i = 0; i < props.matchInfo.options.players; i++) {\n        let content = '';\n        let you = false;\n        if (i in props.matchInfo.players) {\n            content = props.matchInfo.players[i].name;\n            you = socket.id.startsWith(props.matchInfo.players[i].id);\n        }\n        tableBody.push(\n            <TableRow key={i}>\n                <TableCell className={classes.tableCell}>\n                    {i in props.matchInfo.players && props.matchInfo.host == props.matchInfo.players[i].id ?\n                        <Tooltip title=\"This player is the host. They have the ability to start the game.\">\n                            <StarsIcon fontSize=\"inherit\" />\n                        </Tooltip>\n                    : null}\n                    <span style={i in props.matchInfo.players ? {color:playerColours[props.matchInfo.players[i].num]} : null}>{you ? <span className={classes.you}>{content}</span> : content}</span>\n                    {you ? <Tooltip title=\"Customise\">\n                        <IconButton size=\"small\" onClick={() => showDialog({title: 'Customisation'}, <div style={{textAlign: 'center'}}><NameInput /><ColorPicker selected={props.matchInfo.players[i].num} matchInfo={props.matchInfo} /></div>)}><EditIcon fontSize=\"inherit\" /></IconButton>\n                    </Tooltip> : null}\n                    {i in props.matchInfo.players && amHost && !props.matchInfo.starting && !you ? <span>\n                        <Tooltip title=\"Kick - remove this player from this lobby.\">\n                            <IconButton size=\"small\" onClick={() => socket.emit('kick', props.matchInfo.players[i].id)}><ClearIcon fontSize=\"inherit\" /></IconButton>\n                        </Tooltip>\n                        {!props.matchInfo.players[i].bot ? \n                            <Tooltip title=\"Promote - transfer your host privileges to this player.\" onClick={() => socket.emit('promote', props.matchInfo.players[i].id)}>\n                                <IconButton size=\"small\"><StarBorderIcon fontSize=\"inherit\" /></IconButton>\n                            </Tooltip>\n                        : null}\n                    </span> : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    React.useEffect(() => {\n        showMatchOptions.hostChanged(amHost);\n    });\n\n    if (props.matchInfo.starting) {\n        (new Audio(`/countdown/${props.matchInfo.startTimer}.mp3`)).play();\n    }\n\n    let copyHelp = 'Copy a link others can use to join this lobby to your clipboard.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    return (\n        <div>\n            <IconButton onClick={() => window.location.reload()}>\n                <MeetingRoomIcon />\n            </IconButton>\n            <rules.ShowRulesButton />\n\n            <div className={classes.root}>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    Room code\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                    <span className={classes.privacyIcon}>\n                        {props.matchInfo.options.public ? <Tooltip title=\"This is a public match. Anyone can join this match from the 'Find Match' button on the homepage.\"><PublicIcon /></Tooltip> : <Tooltip title=\"This is a private match. Only people with the room code can join.\"><LockIcon /></Tooltip>}\n                    </span>\n                    {props.matchInfo.code}\n                    <Tooltip title={copyTitle}>\n                        <IconButton onClick={() => {\n                            copy(`${window.location.protocol}//${window.location.host}?${props.matchInfo.code}`);\n                            setCopyTitle('Copied to clipboard!');\n                            setTimeout(() => {\n                                setCopyTitle(copyHelp);\n                            }, 3000);\n                        }}><LinkIcon /></IconButton>\n                    </Tooltip>\n                </Typography>\n\n                <Button color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions({editable: amHost, started: true})}>Match options</Button>\n                <br /><br />\n                {props.matchInfo.starting ?\n                    <Typography variant=\"h4\">Starting in {props.matchInfo.startTimer}...</Typography>\n                :\n                    <Tooltip title={amHost ? 'Begin a timer to start the match. No more players will be able to join.' : 'Only the host can start the match.'}>\n                        <span>\n                            <Button color={amHost ? 'primary' : 'default'} size=\"large\" onClick={() => socket.emit('startMatch')} disabled={!amHost}>Start Match</Button>\n                        </span>\n                    </Tooltip>\n                }\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className={classes.head}>\n                                <TableCell className={classes.tableCell}>\n                                    Players: {props.matchInfo.players.length}/{props.matchInfo.options.players}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n}\n\nexport default Lobby;","import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport socket from '../socket';\nimport playerColours from '../Match/playerColours.json';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nfunction ComeBackMenu(props) {\n    return (\n        <div>\n            <Typography variant=\"h3\">Who will you rejoin the game as?</Typography>\n            {props.choices.map(choice =>\n                <button\n                    style={{background: playerColours[choice.num]}}\n                    onClick={() => socket.emit('comeback', choice.num, props.code)}\n                >{choice.name}</button>\n            )}\n        </div>\n    );\n}\n\nexport default ComeBackMenu;","import React from 'react';\nimport publicDir from '../public.json';\nimport { Tooltip, Link } from '@material-ui/core';\nimport playerColours from './playerColours.json';\n\nconst typeNames = {\n    'cards': 'Card',\n    'roles': 'Role',\n    'tiles': 'Tile',\n    'directions': 'Direction',\n    'terms': 'Term'\n};\nconst types = Object.keys(typeNames);\nconst colourOverrides = [\n    [/^north$/, '#fe0000'],\n    [/^n\\d+$/, '#fe0000'],\n    [/^east$/, '#02fe01'],\n    [/^e\\d+$/, '#02fe01'],\n    [/^south$/, '#bbb500'],\n    [/^s\\d+$/, '#bbb500'],\n    [/^west$/, '#0100fc'],\n    [/^w\\d+$/, '#0100fc'],\n    [/pirate/, '#00ff00'],\n    [/biologist/, '#00ff00'],\n    [/monster/, '#ff0000'],\n    [/master/, '#ff0000'],\n    [/servant/, '#ff0000'],\n    [/compass/, '#5b5b5b'],\n];\n\nexport default function formatText(text, playerNames) {\n    let words = text.split(' ');\n    return (\n        <span>{words.map((word, index) => {\n            let space = index == 0 ? '' : ' ';\n            //if (word.startsWith('#')) {\n                let hashtag = word.replace(/\\W/g,'').toLowerCase();\n\n                let typeFound = false;\n                let colourOverride = '#03a1fc';\n                for (let type of types) {\n                    if (publicDir[type].hasOwnProperty(hashtag)) {\n                        typeFound = type;\n                        for (let i of colourOverrides) {\n                            if (i[0].test(hashtag)) {\n                                colourOverride = i[1];\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n\n                if (typeFound)\n                    return (<Tooltip enterTouchDelay={0} title={<span>\n                        <h4 style={{textAlign: 'center'}}>{typeNames[typeFound]}</h4>\n                        <img src={`/${typeFound}/${hashtag}.${publicDir[typeFound][hashtag]}`} width={80} style={{borderRadius:4}} />\n                    </span>} PopperProps={{style: {zIndex: 100000}}}>\n                        <span>{space}<Link style={{color: colourOverride}}>{word}</Link></span>\n                    </Tooltip>);\n                \n\n                if (/^p\\d+$/.test(hashtag)) {\n                    let num = Number(hashtag.slice(1));\n                    console.log(playerNames);\n                    if (playerNames[num] != null) {\n                        return <span style={{color: playerColours[num]}}>{space}{playerNames[num]}</span>;\n                    }\n                }\n\n                for (let i in playerNames) {\n                    if (playerNames[i] != null && playerNames[i].toLowerCase() == hashtag) {\n                        return <span style={{color: playerColours[i]}}>{space}{playerNames[i]}</span>;\n                    }\n                }\n            //}\n            return `${space}${word}`;\n        })}</span>\n    );\n}","import React from 'react';\nimport { Typography, Divider, Tooltip, Button, FormControl, FilledInput, IconButton, InputAdornment, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport showDialog from '../Dialog/show';\nimport socket from '../socket';\nimport playerColours from './playerColours.json';\nimport formatText from './formatText';\n\nimport ChatIcon from '@material-ui/icons/Chat';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nconst useStyles = makeStyles({\n    root: {\n        background: '#f7f0d5',\n        borderTop: '1px solid #0000001f',\n    },\n\n    cards: {\n        height: '100%',\n        overflowX: 'scroll',\n        textAlign: 'center',\n        whiteSpace: 'nowrap',\n    },\n\n    card: {\n        height: '18vh'\n    },\n\n    playingStatusContainer: {\n        textAlign: 'center',\n    },\n\n    playingStatus: {\n        borderRadius: 5,\n        paddingRight: 5,\n        display: 'inline-block',\n        color: 'white',\n        '& span': {\n            fontSize: 32,\n            paddingLeft: 10,\n            paddingRight: 10,\n            borderRight: '1px solid #0000001f',\n            marginRight: 5,\n        },\n    },\n\n    playingCards: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        '& span': {\n            textAlign: 'center',\n            '& img': {\n                height: '24vh',\n            },\n        },\n    },\n\n    chat: {\n        padding: '10px 15px',\n        overflowY: 'scroll',\n        maxHeight: 'inherit',\n        width: '100%',\n        wordBreak: 'break-word',\n    },\n\n    voteArea: {\n        width: '15em',\n        overflowY: 'scroll',\n        '& div': {\n            borderBottom: '1px solid #0000001f',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            color: 'white',\n            height: '40px',\n            fontSize: '20px',\n            cursor: 'pointer',\n        },\n    },\n\n    textField: {\n        width: '100%',\n    },\n});\n\nfunction Controller(props) {\n    const classes = useStyles();\n    const chatRef = React.createRef();\n    const bottomRef = React.createRef();\n\n    const [display, setDisplay] = React.useState('discuss');\n    const [cards, setCards] = React.useState([]);\n    const [cardsSelected, setCardsSelected] = React.useState(Array(props.matchInfo.options.handSize).fill(false));\n    const [playingStatus, setPlayingStatus] = React.useState([]);\n    const [playedCard, setPlayedCard] = React.useState('blank');\n    const [cardsLeft, setCardsLeft] = React.useState(1);\n    const [vote, setVote] = React.useState(null);\n    const [chooseTitle, setChooseTitle] = React.useState('');\n    const [muted, setMuted] = React.useState(false);\n    const [messages, setMessages] = React.useState([]);\n    const [messageTyped, setMessageTyped] = React.useState('');\n    const sendMessage = () => {\n        socket.emit('msg', messageTyped);\n        setMessageTyped('');\n    };\n    let [votes, setVotes] = React.useState(Array(props.matchInfo.players.length).fill(null));\n    let votesA = Array(props.matchInfo.players.length).fill(null);\n    let playerNames = Array(playerColours.length).fill(null);\n    for (let i of props.matchInfo.players) {\n        playerNames[i.num] = i.name;\n    }\n\n    React.useEffect(() => {\n        //chatRef.current.scrollTop = chatRef.current.scrollHeight - chatRef.current.clientHeight - chatRef.current.clientTop;\n\n        socket.on('wait', newPlayingStatus => {\n            setPlayingStatus(newPlayingStatus)\n            setDisplay('wait');\n        });\n        socket.on('cards', newCards => {\n            setCards(newCards);\n            setCardsSelected(Array(props.matchInfo.options.handSize).fill(false));\n            setDisplay('select');\n        });\n        socket.on('play', (card, newCardsLeft) => {\n            setPlayedCard(card);\n            setCardsLeft(newCardsLeft);\n            setDisplay('play');\n        });\n        socket.on('currentVote', newVote => {\n            setVote(newVote);\n        });\n        socket.on('discuss', newVote => {\n            window.chatStart = true;\n            setDisplay('chat');\n            setVote(newVote);\n        });\n        socket.on('vote', (index, newVote) => {\n            votesA[index] = newVote;\n            setVotes(JSON.parse(JSON.stringify(votesA)));\n        });\n        socket.on('choosePlayer', title => {\n            setChooseTitle(title);\n            setDisplay('choosePlayer');\n        });\n        socket.on('die', dead => {\n            props.matchInfo.players.find(p => p.num == dead).dead = true;\n            setDisplay('chat');\n        });\n        socket.on('mute', newMuted => {\n            setMessageTyped('');\n            setMuted(newMuted);\n            if (props.matchInfo.players.find(p => p.dead && socket.id.startsWith(p.id))) {\n                setMuted(true);\n            } else if (newMuted) {\n                showDialog({\n                    title: 'Muted!',\n                    description: 'Someone played a mute card, so no one can talk this turn.'\n                });\n            }\n        });\n        socket.on('message', message => {\n            console.log(message);\n            setMessages(prevMessages => [...prevMessages, message])\n        });\n\n        return () => {\n            socket.off('wait');\n            socket.off('cards');\n            socket.off('play');\n            socket.off('currentVote');\n            socket.off('discuss');\n            socket.off('vote');\n            socket.off('choosePlayer');\n            socket.off('die');\n            socket.off('message');\n            socket.off('muted');\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (display == 'chat') {\n            if (window.chatStart) {\n                window.chatStart = false;\n                bottomRef.current.scrollIntoView();\n            } else {\n                let lastMessage = chatRef.current.children[chatRef.current.children.length - 1];\n                if (chatRef.current.scrollHeight - chatRef.current.clientHeight - chatRef.current.clientTop - chatRef.current.scrollTop < lastMessage.clientHeight + 35)\n                    bottomRef.current.scrollIntoView();\n            }\n        }\n    });\n\n    return (\n        <div class={classes.root} style={{height: props.height, maxHeight: 'calc(30vh - 1px)'}}>\n            {(() => {\n                switch (display) {\n                    case 'select':\n                        let cardsSelectedAmount = cardsSelected.filter(card => card).length;\n                        let sendBlocked = cardsSelectedAmount < props.matchInfo.options.minPlayed || cardsSelectedAmount > props.matchInfo.options.maxPlayed;\n                        return (<div>\n                        <div class={classes.cards}>\n                            {cards.map((card, index) => (\n                                <Tooltip title={<img src={`/cards/${card}.png`} width={200} />}>\n                                    <Button onClick={() => setCardsSelected(cardsSelected.map((card, i) => index == i ? !card : card))}>\n                                        <img class={classes.card} src={`/cards/${card}.png`} style={{opacity: cardsSelected[index] ? 1 : 0.5}} />\n                                    </Button>\n                                </Tooltip>\n                            ))}\n                        </div>\n                        <div style={{textAlign: 'center'}}>\n                            <Button\n                                color=\"primary\"\n                                style={{opacity: sendBlocked ? 0.5 : 1}}\n                                disabled={sendBlocked}\n                                onClick={() => socket.emit('play', cardsSelected.map((card, index) => [index, card]).filter(e => e[1]).map(e => e[0]))}\n                            >\n                                Play {cardsSelectedAmount}/{props.matchInfo.options.maxPlayed}\n                            </Button>\n                        </div>\n                    </div>);\n                    \n                    case 'wait': return (<div className={classes.playingStatusContainer}>\n                        {playingStatus.map(p => {\n                            let player = props.matchInfo.players.find(pl => pl.num == p.n);\n                            //if (player.dead) return <s>{player.name}</s>\n                            return <span className={classes.playingStatus} style={{background: playerColours[p.n]}}>\n                                <span style={{textDecoration: `${player.dead ? 'line-through' : ''}${socket.id.startsWith(player.id) ? ' underline' : ''}`}}>{player.name}</span>\n                                {[<MoreHorizIcon />, <CheckIcon />, <CloseIcon />][p.s]}\n                            </span>;\n                        })}\n                    </div>);\n\n                    case 'play': return (<div className={classes.playingCards}>\n                        <span><img src={`/cards/${cardsLeft == 0 ? 'blank' : 'back'}.png`} /><br />To play: {cardsLeft}</span>\n                        <span><img src={`/cards/${playedCard}.png`} /><br />Playing</span>\n                        <span><img src={`/cards/${vote == null ? 'blank' : vote}.png`} /><br />Vote</span>\n                    </div>);\n\n                    case 'chat': return (<div style={{maxHeight: 'inherit', display: 'flex'}}>\n                        <div ref={chatRef} className={classes.chat}>\n                            {messages.map(msg => {\n                                if (msg.hasOwnProperty('l')) {\n                                    let color;\n                                    switch (msg.o) {\n                                        case 's': color = '#ff4f4f';break;\n                                        case 'i': color = '#6bc4ff';break;\n                                        default: color = '#858585';break;\n                                    };\n                                    return <Typography style={{color}}>\n                                        {formatText(msg.l, playerNames)}\n                                    </Typography>;\n                                } else {\n                                    return <Typography>\n                                        <span style={{color: '#777777'}}>[<span style={{color: playerColours[msg.p]}}>{props.matchInfo.players.find(p => p.num == msg.p).name}</span>]</span>\n                                        {' '}\n                                        {formatText(msg.m, playerNames)}\n                                    </Typography>;\n                                }\n                            })}\n                            <FormControl className={classes.textField} variant=\"filled\">\n                                <InputLabel htmlFor=\"messageInput\">\n                                    Message\n                                </InputLabel>\n            \n                                <FilledInput\n                                    id=\"messageInput\"\n                                    type=\"text\"\n                                    value={messageTyped}\n                                    onChange={e => setMessageTyped(e.target.value)}\n                                    autoComplete=\"off\"\n                                    inputProps={{\n                                        maxLength: 99,\n                                        onKeyDown: e => {if (e.key == 'Enter') sendMessage()},\n                                    }}\n                                    disabled={muted}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"Join\"\n                                                onClick={sendMessage}\n                                                edge=\"end\"\n                                            >\n                                                <ChatIcon />\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n                            <span ref={bottomRef} />\n                        </div>\n                        <div className={classes.voteArea}>\n                            <div style={{color: 'black', fontSize: 13, cursor: 'auto', height: 25}}>\n                                <span style={{textAlign: 'center', width: '100%'}}>Voting for: {vote == null ? 'Turn end' : `${vote[0].toUpperCase()}${vote.slice(1)}`}</span>\n                            </div>\n                            {props.matchInfo.players.map(player => {\n                                return <Tooltip title={`p${player.num}`}>\n                                    <div onClick={() => socket.emit('vote', player.num)}>\n                                        <div style={{background: playerColours[player.num], width: '100%'}}>\n                                        <span style={{textDecoration: `${player.dead ? 'line-through' : ''} ${socket.id.startsWith(player.id) ? 'underline' : ''}`}}>{player.name}</span>\n                                        </div>\n                                        <span style={{borderLeft: '1px solid #0000001f', fontSize: 0, padding: 8, background: ((votes[player.num] === null || votes[player.num] === null == true) ? 'white' : playerColours[votes[player.num]])}}>{votes[player.num] == null || votes[player.num] == false ? (player.dead || votes[player.num] === false ? <CloseIcon style={{color: 'black'}} /> : <MoreHorizIcon style={{color: 'black'}} />) : <CheckIcon style={{color: votes[player.num] === true ? 'black' : 'white'}} />}</span>\n                                    </div>\n                                </Tooltip>;\n                            })}\n                            <span style={{width: '100%', display: 'flex', justifyContent: 'center'}}><Tooltip title=\"Vote for no one\"><Button onClick={() => socket.emit('vote', false)} variant=\"contained\" size=\"small\" disableElevation>Abstain</Button></Tooltip></span>\n                        </div>\n                    </div>);\n\n                    case 'choosePlayer': return <div>\n                        <Typography variant=\"h4\">{chooseTitle}</Typography>\n                        {props.matchInfo.players.map(player => {\n                            if (player.dead) return;\n                            return <button style={{background: playerColours[player.num]}} onClick={() => socket.emit('choosePlayer', player.num)}>{player.name}</button>\n                        })}\n                    </div>;\n                }\n            })()}\n        </div>\n    );\n}\n\nexport default Controller;","import React from 'react';\nimport { Typography, Divider, Tooltip, IconButton } from '@material-ui/core';\nimport showDialog from '../Dialog/show';\nimport playerColours from './playerColours.json';\n\nfunction RoleInfo(props) {\n    return (\n        <div>\n            <div style={{textAlign: 'center'}}>\n                <img src={`/roles/${props.matchInfo.role}.png`} width={100} />\n                <Typography variant=\"h5\" style={{color: playerColours[props.matchInfo.me.num]}}>{props.matchInfo.me.name}</Typography>\n            </div>\n            <Typography variant=\"h6\">{(() => {\n                switch (props.matchInfo.role) {\n                    case 'pirate':\n                        switch (props.matchInfo.options.mode) {\n                            case 0:\n                            case 1:\n                                let seamonsters = props.matchInfo.players.length >= 6 ? 2 : 1;\n                                return `There ${seamonsters == 2 ? 'are' : 'is'} ${seamonsters} sea monster${seamonsters == 2 ? 's' : ''} in this match, everyone else is a pirate.`;\n                                break;\n                            case 2:\n                                let pirates = props.matchInfo.players.length - 2;\n                                return `There are ${pirates-1} other pirates on your team, one of whom is a biologist who knows the identity of the sea monsters. There's 1 Sea Master and 1 Sea Servant.`;\n                                break;\n                            case 3:\n                                return 'Everyone is a pirate in this match! There are no sea monsters.';\n                                break;\n                        }\n                        break;\n                    \n                    case 'seamonster':\n                        if (props.matchInfo.options.mode == 0) {\n                            return <span><span style={{color: playerColours[props.matchInfo.teammate.num]}}>{props.matchInfo.teammate.name}</span> is also a sea monster, everyone else is a pirate.</span>;\n                        } else {\n                            if (props.matchInfo.players.length >= 6) {\n                                return 'There\\'s 1 other sea monster who is on your team, everyone else is a pirate.';\n                            } else {\n                                return 'You\\'re the only sea monster. Everyone else is a pirate.';\n                            }\n                        }\n                    \n                    case 'seaservant':\n                        return 'The Sea Master knows who you are and is with you. Everyone else is a pirate, 1 of whom is a biologist, who knows who you and the Sea Master are.';\n                    \n                    case 'seamaster':\n                        return <span><span style={{color: playerColours[props.matchInfo.teammate.num]}}>{props.matchInfo.teammate.name}</span> is the sea servant, everyone else is a pirate, 1 of whom is a biologist, who knows who you and the Sea Servant are.</span>;\n                    \n                    case 'biologist':\n                        return <div>\n                            {props.matchInfo.roles.map(p => {\n                                if (p.role == 'biologist') return '';\n                                let player = props.matchInfo.players.find(pl => pl.num == p.num);\n\n                                return <span style={{color: playerColours[player.num], display: 'inline-block', marginRight: 15}}>{player.name}: <img src={`/roles/${p.role}.png`} width={50} /><br /></span>;\n                            })}\n                        </div>;\n                }\n            })()}</Typography>\n            <Typography>Check the rulebook to see what you have to do.</Typography>\n        </div>\n    );\n}\n\nfunction showRoleInfo(matchInfo) {\n    showDialog({\n        title: 'Your role info',\n    }, <RoleInfo matchInfo={matchInfo} />);\n}\n\nexport default showRoleInfo;","import React from 'react';\nimport { Typography, Divider, Tooltip, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Controller from './Controller';\nimport './index.css';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport showRoleInfo from './showRoleInfo';\nimport showDialog from '../Dialog/show';\nimport rules from '../Rules';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport CodeIcon from '@material-ui/icons/Code';\nimport socket from '../socket';\n\nconst controllerHeight = '30vh';\nconst useStyles = makeStyles({\n    gameInfo: {\n        display: 'flex',\n        width: '100%',\n        height: 83,\n        //marginBottom: 20,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: '#ffea8c',\n        borderBottom: '1px solid #0000001f',\n        zIndex: 100,\n        '& div': {\n            flexGrow: 1,\n        },\n    },\n\n    gameInfoTitle: {\n        textAlign: 'center',\n    },\n\n    gameInfoContent: {\n        display: 'flex',\n        alignItems: 'end',\n        justifyContent: 'center',\n        /*textAlign: 'center',\n        '& *': {\n            display: 'inline',\n        },*/\n    },\n\n    boardContainer: {\n        maxHeight: `calc(100vh - 83px - ${controllerHeight})`,\n        height: '100vh',\n        textAlign: 'center',\n        lineHeight: 0,\n        position: 'relative'\n    },\n\n    board: {\n        height: '100%',\n        width: '100%',\n        objectFit: 'contain',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n\n    buttons: {\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        opacity: 1,\n        width: 48,\n        zIndex: 100,\n    },\n});\n\nfunction Match(props) {\n    const classes = useStyles();\n    let selfPlayer = props.players.find(player => props.myId.startsWith(player.id));\n\n    const [dir, setDir] = React.useState(props.matchInfo.dir);\n    const [pos, setPos] = React.useState(props.matchInfo.ship);\n\n    React.useEffect(() => {\n        showRoleInfo(props.matchInfo);\n        socket.on('dir', newDir => setDir(newDir));\n        socket.on('move', newPos => setPos(newPos));\n\n        return () => {\n            socket.off('dir');\n            socket.off('pos');\n        };\n    }, []);\n\n    return (\n        <div>\n            <div className={classes.gameInfo}>\n                <Tooltip title=\"treasures found / treasures needed (for pirates to win) / total treasures\">\n                    <div>\n                        <div className={classes.gameInfoTitle}>\n                            <Typography variant=\"subtitle1\">\n                                Treasures found\n                            </Typography>\n                        </div>\n                        <div className={classes.gameInfoContent}>\n                            <Typography variant=\"h3\">\n                                <span id=\"treasuresFound\">0</span>\n                            </Typography>\n                            <Typography variant=\"h5\">\n                                /<span id=\"treasuresNeeded\">?</span>\n                            </Typography>\n                            <Typography>\n                                /<span id=\"treasuresTotal\">?</span>\n                            </Typography>\n                        </div>\n                    </div>\n                </Tooltip>\n\n                <Tooltip title=\"Ship HP / Maximum ship HP. If this reaches 0, the ship sinks, which means the Sea Monsters win and the pirates lose.\">\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Ship HP\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"shipHP\">?</span>\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            /<span id=\"maxShipHP\">?</span>\n                        </Typography>\n                    </div>\n                </div>\n                </Tooltip>\n\n                <Tooltip title=\"turn number lol\">\n                    <div>\n                        <div className={classes.gameInfoTitle}>\n                            <Typography variant=\"subtitle1\">\n                                Turn\n                            </Typography>\n                        </div>\n                        <div className={classes.gameInfoContent}>\n                            <Typography variant=\"h3\">\n                                <span id=\"turnNumber\">?</span>\n                            </Typography>\n                        </div>\n                    </div>\n                </Tooltip>\n            </div>\n\n            <div className={classes.buttons}>\n                <rules.ShowRulesButton />\n                <IconButton onClick={() => showRoleInfo(props.matchInfo)}><DescriptionIcon /></IconButton>\n                <IconButton onClick={() => showMatchOptions.showMatchOptions({editable: false, started: true, ingame: true, options: props.matchInfo.options})}><SettingsIcon /></IconButton>\n                <IconButton onClick={() => showDialog({\n                    title: \"Room Code\",\n                    description: \"Players can use this code to rejoin the match if they get disconnected:\",\n                }, <Typography variant=\"h2\">{props.matchInfo.code}</Typography>)}><CodeIcon /></IconButton>\n            </div>\n\n            <div className={classes.boardContainer}>\n                <canvas id=\"board\" style={{\n                }} className={classes.board} />\n                <Tooltip title={<span style={{fontSize: 30, lineHeight: 1.2}}>\n                    {pos[1]+1}, {pos[0]+1} | {['N','NE','E', 'SE', 'S', 'SW', 'W', 'NW'][dir]} ({'↑↗→↘↓↙←↖'[dir]})\n                </span>}>\n                    <canvas id=\"topLayer\" style={{\n                    }} className={classes.board} />\n                </Tooltip>\n            </div>\n\n            <Controller height={controllerHeight} matchInfo={props.matchInfo} />\n        </div>\n    );\n}\n\nexport default Match;","import React from 'react';\nimport { Typography, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Button, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport socket from '../socket/';\nimport playerColours from '../Match/playerColours.json';\nimport rules from '../Rules';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport SettingsIcon from '@material-ui/icons/Settings';\n//import { gameNameChars } from '../Match/gameplay';\n\nconst wins = {\n    'treasure': [true, 'The pirates found all the treasure they needed!'],\n    'kill': [true, 'The pirates found and killed a sea monster!'],\n    'sink': [false, 'The ship sank.'],\n    'snitch': [false, 'The Sea Master found the biologist and snitched on them.'],\n};\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    gamesContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& div': {\n            marginLeft: 25,\n            marginRight: 25,\n        },\n    },\n\n    gameImage: {\n        width: 150,\n    },\n\n    counterImage: {\n        height: 10,\n    },\n\n    you: {\n        color: 'red',\n    },\n\n    otherPlayer: {\n    },\n});\n\nfunction Results(props) {\n    const classes = useStyles();\n    \n    (new Audio('/endMatch.mp3')).play();\n    \n    let win = wins[props.results.cause];\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <IconButton onClick={() => showMatchOptions.showMatchOptions({editable: false, started: true, ingame: true, options: props.matchInfo.options})}>\n                    <SettingsIcon />\n                </IconButton>\n                <IconButton onClick={() => window.location.reload()}>\n                    <HomeIcon />\n                </IconButton>\n                <rules.ShowRulesButton />\n                <Typography variant=\"h3\">\n                    <span style={{color: win[0] ? '#00ff00' : '#ff0000'}}>{win[0] ? 'Pirate' : 'Sea Monster'}s</span> win!\n                </Typography>\n                <Typography variant=\"h5\" gutterBottom>\n                    {win[1]}\n                </Typography>\n\n                <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\n                    {props.results.roles.map(player => {\n                        let p = props.matchInfo.players.find(pl => pl.num == player.num);\n                        return (\n                            <span style={{margin: 10}}>\n                                <img src={`/roles/${player.role}.png`} width={100} /><br />\n                                <span style={{fontSize: 20, textAlign: 'center', color: playerColours[p.num], textDecoration: `${p.dead ? 'line-through' : ''} ${props.myId.startsWith(p.id) ? 'underline': ''}`}}>{p.name}</span>\n                            </span>\n                        );\n                    })}\n                </div>\n\n                <br />\n                <Button color=\"primary\" size=\"large\" style={{margin: '16px 0'}} onClick={() => socket.emit('rejoin', props.rjCode, props.matchInfo.options)}>Play again</Button>\n\n                <Divider/>\n\n                <Typography variant=\"h3\">\n                    Final board\n                </Typography>\n                <img src={props.finalBoard} style={{height: '80vh', maxWidth: '100%', objectFit: 'contain'}} />\n            </div>\n        </div>\n    );\n}\n\nexport default Results;","const images = {\n    tiles : {},\n    ship: Array(36).fill(null).map((e, i) => {\n        let img = new Image();\n        img.src = `/ship/${i}.png`\n        return img;\n    }),\n};\n\nfor (let i of ['unknown', 'water', 'treasure', 'rock', 'iceberg', 'waves', 'storm', 'alcohol', 'whirlpoolleft', 'whirlpoolright', 'blank']) {\n    let src = `/tiles/${i}.png`;\n    images.tiles[i] = new Image();\n    images.tiles[i].src = src;\n}\n\nimages.ship.src = '/ship.png';\n\nexport default images;","function getRandomInt(n) {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleString(s) {\n    let arr = s.split('');\n    let n = arr.length;\n\n    for(let i=0 ; i<n-1 ; ++i) {\n        let j = getRandomInt(n);\n        \n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    s = arr.join('');\n    return s;\n}\n\nexport default shuffleString;","import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Match from './';\nimport Results from '../Results';\nimport shuffleString from './shuffleString';\nimport images from './images';\n\nconst boxSize = 200;\nconst gridlineSize = 6;\nconst borderSize = 20;\nconst gameNameChars = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst placeAudio = new Audio('/place.mp3');\nconst otherPlaceAudio = new Audio('/otherPlace.mp3');\nconst gameEndAudio = new Audio('/endGame.mp3');\nconst startTurnAudio = new Audio('/startTurn.mp3');\n\n\nvar matchInfo;\nvar myId;\nvar intervals = [];\nvar turnNumber = 0;\nvar HP;\n\nvar tilesChanging = [];\nvar movement = null;\nvar direction = null;\nvar textNotifs = [];\n\nvar canvas;\nvar ctx;\nvar topCanvas;\nvar topCtx;\nvar animating = false;\n\nfunction renderBottom() {\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n    //horizontal gridlines\n    ctx.fillStyle = 'black';\n    for (let x = 1; x < matchInfo.options.boardSize[0]; x++)\n        ctx.fillRect(borderSize, (gridlineSize+boxSize)*x-gridlineSize+borderSize, ((gridlineSize+boxSize)*matchInfo.options.boardSize[1])-gridlineSize, gridlineSize);\n    //vertical gridlines\n    for (let y = 1; y < matchInfo.options.boardSize[1]; y++)\n        ctx.fillRect((gridlineSize+boxSize)*y-gridlineSize+borderSize, borderSize, gridlineSize, ((gridlineSize+boxSize)*matchInfo.options.boardSize[0])-gridlineSize);\n    \n    //left (blue) border\n    ctx.fillStyle = '#0100fc';\n    ctx.fillRect(0, 0, borderSize, (gridlineSize+boxSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize*2);\n    //right (green) border\n    ctx.fillStyle = '#02fe01';\n    ctx.fillRect((gridlineSize+boxSize)*matchInfo.options.boardSize[1]-gridlineSize+borderSize, 0, borderSize, (gridlineSize+boxSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize*2);\n    //top (red) border\n    ctx.fillStyle = '#fe0000';\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(borderSize, borderSize);\n    ctx.lineTo((gridlineSize+boxSize)*matchInfo.options.boardSize[1]-gridlineSize+borderSize, borderSize);\n    ctx.lineTo((gridlineSize+boxSize)*matchInfo.options.boardSize[1]-gridlineSize+borderSize*2, 0);\n    ctx.fill();\n    //bottom (yellow) border\n    ctx.fillStyle = '#fdff06';\n    ctx.beginPath();\n    ctx.moveTo(0, (gridlineSize+boxSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize*2);\n    ctx.lineTo((gridlineSize+boxSize)*matchInfo.options.boardSize[1]-gridlineSize+borderSize*2, (gridlineSize+boxSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize*2);\n    ctx.lineTo((gridlineSize+boxSize)*matchInfo.options.boardSize[1]-gridlineSize+borderSize, (gridlineSize+boxSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize);\n    ctx.lineTo(borderSize, (gridlineSize+boxSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize);\n    ctx.fill();\n\n    //draw tiles\n    for (let y = 0; y < matchInfo.options.boardSize[0]; y++)\n        for (let x = 0; x < matchInfo.options.boardSize[1]; x++) {\n            let img = images.tiles[matchInfo.board[y][x]]; //get image of tile\n            if (img.complete) //if the image has loaded\n                ctx.drawImage(img, (gridlineSize+boxSize)*x+borderSize, (gridlineSize+boxSize)*y+borderSize, boxSize, boxSize); //draw it\n        }\n}\n\nfunction renderBoard(bypass=false) {\n    if (!(animating || bypass)) return;\n\n    topCtx.clearRect(0, 0, topCanvas.width, topCanvas.height);\n    let now = Date.now();\n\n    //draw tiles which are changing\n    let cttd = [];\n    let doBottom = false; //lol\n    tilesChanging.forEach((tile, index) => {\n        if (now - tile.start >= tile.time) cttd.push(index);\n        if (tile.new) {\n            doBottom = true;\n            tile.new = false;\n        }\n\n        topCtx.globalAlpha = 1 - Math.min(1, (now - tile.start) / tile.time);\n        if (images.tiles[tile.before].complete)\n            topCtx.drawImage(images.tiles[tile.before], (gridlineSize+boxSize)*tile.location[1]+borderSize, (gridlineSize+boxSize)*tile.location[0]+borderSize, boxSize, boxSize);\n    });\n    if (doBottom) renderBottom();\n    cttd.reverse();\n    cttd.forEach(i => tilesChanging.splice(i, 1));\n    \n    //draw ship\n    if (movement != null) { //move ship\n        matchInfo.ship = movement.from.map((a, index) => a+((movement.to[index]-a)*Math.min(1, (now - movement.start) / movement.time)));\n        if (now - movement.start > movement.time) movement = null;\n    }\n    if (direction != null) { //turn ship\n        matchInfo.dir = ((direction.from + (direction.diff * Math.min(1, (now - direction.start) / direction.time))) + 8) % 8;\n        if (now - direction.start > direction.time) direction = null;\n    }\n    topCtx.globalAlpha = 1;\n    let shipImg = images.ship[(Math.round(matchInfo.dir * 4.5)+36)%36];\n    if (shipImg.complete)\n        topCtx.drawImage(shipImg, (gridlineSize+boxSize)*matchInfo.ship[1]+borderSize, (gridlineSize+boxSize)*matchInfo.ship[0]+borderSize, boxSize, boxSize);\n\n    //draw text notifications\n    topCtx.textAlign = 'center';\n    topCtx.textBaseline = 'middle';\n    topCtx.font = `${boxSize*0.8}px sans-serif`;\n    let ntd = [];\n    textNotifs.forEach((notif, index) => {\n        if (now - notif.start >= notif.time) cttd.push(index);\n        let progress = Math.min(1, (now - notif.start) / notif.time);\n\n        topCtx.globalAlpha = Math.sin(progress*Math.PI);;\n        topCtx.fillStyle = notif.color;\n        topCtx.fillText(notif.text, (gridlineSize+boxSize)*notif.at[1]+borderSize+(boxSize/2), (gridlineSize+boxSize)*notif.at[0]+borderSize+(boxSize/2)-(notif.height*progress));\n    });\n    ntd.reverse();\n    ntd.forEach(i => textNotifs.splice(i, 1));\n\n    requestAnimationFrame(renderBoard);\n}\n\nfunction playMatch(startingMatchInfo, sentId) {\n    myId = sentId;\n    matchInfo = startingMatchInfo;\n    turnNumber = 0;\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Match matchInfo={matchInfo} players={startingMatchInfo.players} myId={myId} /></ThemeProvider>, document.getElementById('root'), () => {\n        canvas = document.getElementById('board');\n        ctx = canvas.getContext('2d');\n        topCanvas = document.getElementById('topLayer');\n        topCtx = topCanvas.getContext('2d');\n        canvas.width = (boxSize+gridlineSize)*matchInfo.options.boardSize[1]-gridlineSize+borderSize*2;\n        canvas.height = (boxSize+gridlineSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize*2;\n        topCanvas.width = (boxSize+gridlineSize)*matchInfo.options.boardSize[1]-gridlineSize+borderSize*2;\n        topCanvas.height = (boxSize+gridlineSize)*matchInfo.options.boardSize[0]-gridlineSize+borderSize*2;\n\n        document.getElementById('treasuresNeeded').innerHTML = matchInfo.options.treasuresNeeded;\n        document.getElementById('treasuresTotal').innerHTML = matchInfo.options.tiles.treasure;\n        HP = matchInfo.options.startHP;\n        document.getElementById('shipHP').innerHTML = HP;\n        document.getElementById('maxShipHP').innerHTML = matchInfo.options.maxHP;\n\n        renderBottom();\n        animating = true;\n        renderBoard();\n        \n        (new Audio('/startMatch.mp3')).play();\n    });\n}\n\nfunction move(location) {\n    movement = {\n        from: matchInfo.ship,\n        to: location,\n        start: Date.now(),\n        time: 1000,\n    };\n}\n\nfunction turn(to) {\n    direction = {\n        from: matchInfo.dir,\n        diff: (4 - Math.abs(Math.abs(to - matchInfo.dir) - 4)) * (((to - matchInfo.dir + 8) % 8) > 4 ? -1 : 1), \n        start: Date.now(),\n        time: 400,\n    };\n}\n\nfunction changeTile(location, tile, start=Date.now()) {\n    tilesChanging.push({\n        location: location,\n        before: matchInfo.board[location[0]][location[1]],\n        start: start,\n        time: 200,\n        new: true,\n    });\n    matchInfo.board[location[0]][location[1]] = tile;\n}\n\nfunction newNotif(text, color) {\n    textNotifs.push({\n        text,\n        color,\n        at: [...matchInfo.ship],\n        height: boxSize*0.5,\n        start: Date.now(),\n        time: 2000,\n    });\n}\n\nfunction changeHP(change) {\n    if (change != 0) {\n        newNotif(`${change > 0 ? '+' : '-'}${Math.abs(change)}`, change > 0 ? '#2eff70' : '#ff2e2e');\n        HP += change;\n        if (HP > matchInfo.options.maxHP)\n            HP = matchInfo.options.maxHP;\n        document.getElementById('shipHP').innerHTML = HP;\n    }\n}\n\nfunction treasureFound() {\n    newNotif('+T', '#d69d00');\n    document.getElementById('treasuresFound').innerHTML = Number(document.getElementById('treasuresFound').innerHTML)+1;\n}\n\nfunction turnNum(n) {\n    document.getElementById('turnNumber').innerHTML = n;\n}\n\nfunction die(num) {\n    matchInfo.players.find(p => p.num == num).dead = true;\n}\n\nfunction endMatch(results, rjCode) {\n    animating = false;\n\n    tilesChanging = [];\n    matchInfo.board.forEach((row, y) => row.forEach((tile, x) => {\n        if (tile == 'unknown') {\n            matchInfo.board[y][x] = results.board[y][x];\n            changeTile([y, x], 'blank', Date.now() - 200 * 0.3);\n            matchInfo.board[y][x] = 'blank';\n        }\n        if (results.board[y][x] != results.originalBoard[y][x]) {\n            changeTile([y, x], results.originalBoard[y][x], Date.now() - 200 * 0.2);\n        }\n    }));\n    renderBottom();\n    renderBoard(true);\n    console.log(topCanvas.toDataURL());\n    ctx.drawImage(topCanvas, 0, 0);\n\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Results myId={myId} results={results} matchInfo={matchInfo} rjCode={rjCode} finalBoard={canvas.toDataURL()} /></ThemeProvider>, document.getElementById('root'));\n\n    matchInfo = null;\n}\n\nexport {\n    playMatch,\n    move,\n    turn,\n    changeTile,\n    changeHP,\n    treasureFound,\n    turnNum,\n    die,\n    endMatch,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport socketIOClient from 'socket.io-client';\nimport serverLocation from './server.json';\nimport showDialog from '../Dialog/show';\nimport Connecting from './Connect/ing';\nimport ConnectFailed from './Connect/Failed';\nimport Home from '../Home';\nimport Lobby from '../Lobby';\nimport ComeBackMenu from '../Lobby/ComeBackMenu';\nimport * as gameplay from '../Match/gameplay';\nimport defaultMatchOptions from '../Home/defaultMatchOptions.json';\nimport showMatchOptions from '../Home/showMatchOptions';\n\nvar socket = socketIOClient(serverLocation, {\n    transports: ['websocket'],\n});\nvar connectedOnce = false;\n\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Connecting /></ThemeProvider>, document.getElementById('root'));\n\nsocket.on('connect', () => {\n    if (!connectedOnce) {\n        connectedOnce = true;\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Home /></ThemeProvider>, document.getElementById('root'));\n    }\n});\n\nfunction displayConnectionFail(error) {\n    setTimeout(() => {\n        if (socket.disconnected) {\n            ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ConnectFailed error={error.toString()} /></ThemeProvider>, document.getElementById('root'));\n            socket.disconnect();\n        }\n    }, 10000);\n}\n\nsocket.on('connect_error', displayConnectionFail);\nsocket.on('connect_timeout', displayConnectionFail);\nsocket.on('disconnect', displayConnectionFail);\n\nsocket.on('err', (error='Unknown error', title='Error:') => {\n    showDialog({\n        layer: 'err',\n        title: title,\n        description: error,\n    });\n});\n\nsocket.on('noMatches', async () => {\n    let dialog = await showDialog({\n        title: 'No public matches available.',\n        description: 'Maybe create one yourself for people to join?',\n        buttonText: 'Create match with default options',\n        buttonAction: () => {\n            dialog.handleClose();\n            socket.emit('createMatch', {...defaultMatchOptions, public: true});\n        },\n    });\n});\n\nsocket.on('kicked', kicker => {\n    showDialog({\n        required: true,\n        title: 'Kicked!',\n        description: `${kicker} kicked you from the lobby.`,\n        buttonText: 'Back Home',\n        buttonAction: () => window.location.reload(),\n    });\n});\n\nsocket.on('disconnect', () => {\n    setTimeout(() => {\n        showDialog({\n            title: 'Disconnected.',\n            description: 'Lost connection to the Clueless Captains server. You might not be able to do anything. Sorry :/',\n        });\n        //window.location.reload();\n    }, 200);\n});\n\nsocket.on('joinMatch', () => {\n});\n\nsocket.on('matchUpdate', matchInfo => {\n    if (!matchInfo.started)\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Lobby matchInfo={matchInfo} /></ThemeProvider>, document.getElementById('root'));\n    showMatchOptions.changeOptions(matchInfo.options);\n});\n\nsocket.on('matchStart', matchInfo => gameplay.playMatch(matchInfo, socket.id));\nsocket.on('comebackchoice', (choices, code) => ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ComeBackMenu choices={choices} code={code} /></ThemeProvider>, document.getElementById('root')));\nsocket.on('move', location => gameplay.move(location));\nsocket.on('dir', dir => gameplay.turn(dir));\nsocket.on('reveal', (location, tile) => gameplay.changeTile(location, tile));\nsocket.on('changeTile', (location, tile) => gameplay.changeTile(location, tile));\nsocket.on('damage', damage => gameplay.changeHP(-damage));\nsocket.on('heal', healing => gameplay.changeHP(healing));\nsocket.on('treasure', gameplay.treasureFound);\nsocket.on('turnNum', n => gameplay.turnNum(n));\nsocket.on('die', n => gameplay.die(n));\nsocket.on('endMatch', (results, rjCode) => gameplay.endMatch(results, rjCode));\nsocket.on('rejoin', code => window.location.href = `/?${code}`);\n\nexport default socket;"],"sourceRoot":""}